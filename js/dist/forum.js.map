{"version":3,"sources":["webpack://@fof/user-directory/webpack/bootstrap","webpack://@fof/user-directory/external \"flarum.core.compat['app']\"","webpack://@fof/user-directory/external \"flarum.core.compat['extend']\"","webpack://@fof/user-directory/external \"flarum.core.compat['Component']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/IndexPage']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/user-directory/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/Button']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/user-directory/external \"flarum.core.compat['helpers/listItems']\"","webpack://@fof/user-directory/external \"flarum.core.compat['Model']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/UsersSearchSource']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/Page']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/LogInModal']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/Select']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/SelectDropdown']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/Placeholder']\"","webpack://@fof/user-directory/external \"flarum.core.compat['components/UserCard']\"","webpack://@fof/user-directory/external \"flarum.core.compat['utils/KeyboardNavigatable']\"","webpack://@fof/user-directory/external \"flarum.core.compat['models/Group']\"","webpack://@fof/user-directory/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryListItem.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryList.js","webpack://@fof/user-directory/./src/forum/searchTypes/AbstractType.js","webpack://@fof/user-directory/./src/forum/searchTypes/TextFilter.js","webpack://@fof/user-directory/./src/forum/searchTypes/GroupFilter.js","webpack://@fof/user-directory/./src/forum/components/SearchField.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryPage.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@fof/user-directory/./src/forum/models/Text.js","webpack://@fof/user-directory/./src/forum/components/index.js","webpack://@fof/user-directory/./src/forum/searchTypes/index.js","webpack://@fof/user-directory/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","UserDirectoryListItem","view","user","this","props","card","UserCard","component","className","controlsButtonClassName","Component","UserDirectoryList","init","loading","moreResults","users","refresh","params","LoadingIndicator","Button","children","app","translator","trans","onclick","loadMore","length","text","Placeholder","map","username","data-id","requestParams","include","filter","sort","sortMap","q","relevance","username_az","username_za","newest","oldest","seen_recent","seen_oldest","most_discussions","least_discussions","clear","loadResults","then","results","parseResults","redraw","offset","preloadedUsers","preloadedApiDocument","deferred","resolve","promise","page","join","store","find","push","apply","payload","links","next","lazyRedraw","removeUser","index","indexOf","splice","addUser","unshift","AbstractType","suggestions","resourceType","search","query","renderKind","resource","renderLabel","applyFilter","initializeFromParams","TextFilter","createRecord","attributes","Promise","split","word","GroupFilter","toLowerCase","all","forEach","group","id","Group","GUEST_ID","nameSingular","namePlural","color","style","backgroundColor","icon","qWithSpacesAround","groups","SearchField","searchIndex","navigator","KeyboardNavigatable","when","event","onUp","onDown","allSuggestions","onSelect","selectResult","applyFiltering","onRemove","appliedFilters","pop","availableFilters","filterTypes","toArray","focused","route","param","resources","items","ItemList","add","filterForResource","f","data","type","recipientLabel","searchResultKind","result","clearSuggestions","concat","some","recipient","title","placeholder","oninput","withAttr","performNewSearch","onkeydown","navigate","onfocus","onblur","size","console","warn","UserDirectoryPage","previous","cache","fofUserDirectoryList","keys","bodyClass","onunload","scrollTop","$","window","IndexPage","hero","listItems","sidebarItems","viewItems","actionItems","render","config","isInitialized","context","arguments","extend","css","setTitle","setTitleCount","height","scroll","setTimeout","replace","SelectDropdown","navItems","buttonClassName","stickyParams","LinkButton","href","sortOptions","Select","options","onchange","changeSort","session","searching","clearSearch","routeName","newDiscussion","composeNewDiscussion","modal","show","LogInModal","onlogin","DiscussionComposer","composer","load","Page","_assertThisInitialized","self","ReferenceError","_defineProperty","obj","configurable","writable","Text","Model","attribute","components","searchTypes","initializers","routes","fof_user_directory","path","models","UsersSearchSource","forum"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/IndexPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/UsersSearchSource'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['components/LogInModal'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/SelectDropdown'];","module.exports = flarum.core.compat['components/Placeholder'];","module.exports = flarum.core.compat['components/UserCard'];","module.exports = flarum.core.compat['utils/KeyboardNavigatable'];","module.exports = flarum.core.compat['models/Group'];","module.exports = flarum.core.compat['helpers/icon'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Component from 'flarum/Component';\nimport UserCard from 'flarum/components/UserCard';\n\nexport default class UserDirectoryListItem extends Component {\n    view() {\n        const user = this.props.user;\n        let\n            card = UserCard.component({\n                user,\n                className: 'UserCard--directory',\n                controlsButtonClassName: 'Button Button--icon Button--flat'\n            });\n\n        return (\n            <div className=\"User\">\n                {card}\n            </div>\n        );\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport Placeholder from 'flarum/components/Placeholder';\nimport UserDirectoryListItem from './UserDirectoryListItem';\n\n/**\n * The `DiscussionList` component displays a list of discussions.\n *\n * ### Props\n *\n * - `params` A map of parameters used to construct a refined parameter object\n *   to send along in the API request to get discussion results.\n */\nexport default class UserDirectoryList extends Component {\n  init() {\n    /**\n     * Whether or not discussion results are loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = true;\n\n    /**\n     * Whether or not there are more results that can be loaded.\n     *\n     * @type {Boolean}\n     */\n    this.moreResults = false;\n\n    /**\n     * The users in the user directory list.\n     *\n     * @type {User[]}\n     */\n    this.users = [];\n\n    this.refresh();\n  }\n\n  view() {\n    const params = this.props.params;\n    let loading;\n\n    if (this.loading) {\n      loading = LoadingIndicator.component();\n    } else if (this.moreResults) {\n      loading = Button.component({\n        children: app.translator.trans('core.forum.discussion_list.load_more_button'),\n        className: 'Button',\n        onclick: this.loadMore.bind(this)\n      });\n    }\n\n    if (this.users.length === 0 && !this.loading) {\n      const text = app.translator.trans('core.forum.discussion_list.empty_text');\n      return (\n        <div className=\"DiscussionList\">\n          {Placeholder.component({text})}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"UserDirectoryList\">\n          {this.users.map(user => {\n            return (\n              <div key={user.username()} data-id={user.username()}>\n                {UserDirectoryListItem.component({user, params})}\n              </div>\n            );\n          })}\n        <div key=\"load-more\" className=\"UserDirectoryList-loadMore\">\n          {loading}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Get the parameters that should be passed in the API request to get\n   * discussion results.\n   *\n   * @return {Object}\n   * @api\n   */\n  requestParams() {\n    const params = {include: [], filter: {}};\n\n    params.sort = this.sortMap()[this.props.params.sort];\n\n    if (this.props.params.q) {\n      params.filter.q = this.props.params.q;\n    }\n\n    return params;\n  }\n\n  /**\n   * Get a map of sort keys (which appear in the URL, and are used for\n   * translation) to the API sort value that they represent.\n   *\n   * @return {Object}\n   */\n  sortMap() {\n    const map = {};\n\n    if (this.props.params.q) {\n      map.relevance = '';\n    } else {\n        map.default = '';\n    }\n    map.username_az = 'username';\n    map.username_za = '-username';\n    map.newest = '-joinedAt';\n    map.oldest = 'joinedAt';\n    map.seen_recent = '-lastSeenAt';\n    map.seen_oldest = 'lastSeenAt';\n    map.most_discussions = '-discussionCount';\n    map.least_discussions = 'discussionCount';\n\n    return map;\n  }\n\n  /**\n   * Clear and reload the discussion list.\n   *\n   * @public\n   */\n  refresh(clear = true) {\n    if (clear) {\n      this.loading = true;\n      this.users = [];\n    }\n\n    return this.loadResults(0).then(\n      results => {\n        this.users = [];\n        this.parseResults(results);\n      },\n      () => {\n        this.loading = false;\n        m.redraw();\n      }\n    );\n  }\n\n  /**\n   * Load a new page of discussion results.\n   *\n   * @param {Integer} offset The index to start the page at.\n   * @return {Promise}\n   */\n  loadResults(offset) {\n    const preloadedUsers = app.preloadedApiDocument();\n\n    if (preloadedUsers) {\n      return m.deferred().resolve(preloadedUsers).promise;\n    }\n\n    const params = this.requestParams();\n    params.page = {offset};\n    params.include = params.include.join(',');\n\n    return app.store.find('users', params);\n  }\n\n  /**\n   * Load the next page of discussion results.\n   *\n   * @public\n   */\n  loadMore() {\n    this.loading = true;\n\n    this.loadResults(this.users.length)\n      .then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Parse results and append them to the discussion list.\n   *\n   * @param {Discussion[]} results\n   * @return {Discussion[]}\n   */\n  parseResults(results) {\n    [].push.apply(this.users, results);\n\n    this.loading = false;\n    this.moreResults = !!results.payload.links.next;\n\n    m.lazyRedraw();\n\n    return results;\n  }\n\n  /**\n   * Remove a discussion from the list if it is present.\n   *\n   * @param {Discussion} discussion\n   * @public\n   */\n  removeUser(user) {\n    const index = this.users.indexOf(user);\n\n    if (index !== -1) {\n      this.users.splice(index, 1);\n    }\n  }\n\n  /**\n   * Add a discussion to the top of the list.\n   *\n   * @param {Discussion} discussion\n   * @public\n   */\n  addUser(user) {\n    this.users.unshift(user);\n  }\n}\n","/**\n * @abstract\n */\nexport default class AbstractType {\n    constructor() {\n        this.suggestions = [];\n        this.loading = false;\n    }\n\n    /**\n     * The `type` property of the Models used in suggestions and applied filters for this type\n     * @return {String}\n     */\n    resourceType() {\n        //\n    }\n\n    /**\n     * Executed when the search query changes\n     * The method should update this.suggestions with the new results\n     * If asynchronous loading is used, this.loading should be set to true during the process\n     * @param {String} query\n     */\n    search(query) {\n        //\n    }\n\n    /**\n     * Renders the \"kind\" label next to the value indicating what kind of information that result is\n     * Should probably just be a translated text\n     * @param {Model} resource\n     * @return {vnode}\n     */\n    renderKind(resource) {\n        //\n    }\n\n    /**\n     * Renders the Label containing the suggestion's value\n     * Should be a vdom template using the .UserDirectorySearchLabel class or similar\n     * @param {Model} resource\n     * @return {vnode}\n     */\n    renderLabel(resource) {\n        //\n    }\n\n    /**\n     * Applies a filter on a params object to use in the page request\n     * @param {Object} params Object. Might or might not contain a `q` property or `sort` property. In the future, `filters` object might be supported\n     * @param {Model} resource\n     */\n    applyFilter(params, resource) {\n        //\n    }\n\n    /**\n     * Used to populate the search field on page load with values from the querystring\n     * A promise must be returned, and the UI will auto-update once the promise returns\n     * @param {Object} params Object with a `q` and `sort` property. `filters` might be supported in the future\n     * @return {Promise<Model[]>}\n     */\n    initializeFromParams(params) {\n        //\n    }\n}\n","import app from 'flarum/app';\nimport AbstractType from './AbstractType';\n\n/* global m */\n\nexport default class TextFilter extends AbstractType {\n    resourceType() {\n        return 'fof-user-directory-text';\n    }\n\n    search(query) {\n        if (!query) {\n            this.suggestions = [];\n            return;\n        }\n\n        this.suggestions = [\n            app.store.createRecord('fof-user-directory-text', {\n                attributes: {\n                    text: query,\n                },\n            }),\n        ];\n    }\n\n    renderKind() {\n        return app.translator.trans('fof-user-directory.forum.search.kinds.text');\n    }\n\n    renderLabel(resource) {\n        return m('.UserDirectorySearchLabel', resource.text());\n    }\n\n    applyFilter(params, resource) {\n        params.q = params.q ? params.q + ' ' : '';\n        params.q += resource.text();\n    }\n\n    initializeFromParams(params) {\n        if (!params.q) {\n            return Promise.resolve([]);\n        }\n\n        return Promise.resolve(params.q.split(' ')\n            // Words with : are gambits and we will ignore them\n            .filter(word => word.indexOf(':') === -1)\n            .map(word => app.store.createRecord('fof-user-directory-text', {\n                attributes: {\n                    text: word,\n                },\n            })));\n    }\n}\n","import app from 'flarum/app';\nimport Group from 'flarum/models/Group';\nimport icon from 'flarum/helpers/icon';\nimport AbstractType from './AbstractType';\n\n/* global m */\n\nexport default class GroupFilter extends AbstractType {\n    resourceType() {\n        return 'groups';\n    }\n\n    search(query) {\n        this.suggestions = [];\n\n        if (!query) {\n            return;\n        }\n\n        query = query.toLowerCase();\n\n        app.store.all('groups').forEach(group => {\n            // Do not allow Guest group as it wouldn't do anything\n            if (group.id() === Group.GUEST_ID) {\n                return;\n            }\n\n            if (group.nameSingular().toLowerCase().indexOf(query) !== -1 || group.namePlural().toLowerCase().indexOf(query) !== -1) {\n                this.suggestions.push(group);\n            }\n        });\n    }\n\n    renderKind() {\n        return app.translator.trans('fof-user-directory.forum.search.kinds.group');\n    }\n\n    renderLabel(group) {\n        return m('.UserDirectorySearchLabel', group.color() ? {\n            className: 'colored',\n            style: {\n                backgroundColor: group.color(),\n            },\n        } : {}, [\n            group.icon() ? [\n                icon(group.icon()),\n                ' ',\n            ] : null,\n            group.namePlural(),\n        ]);\n    }\n\n    applyFilter(params, group) {\n        params.q = params.q ? params.q + ' ' : '';\n        params.q += 'group:' + group.namePlural();\n    }\n\n    initializeFromParams(params) {\n        if (!params.q) {\n            return Promise.resolve([]);\n        }\n\n        const qWithSpacesAround = ' ' + params.q + ' ';\n\n        const groups = [];\n\n        app.store.all('groups').forEach(group => {\n            if (qWithSpacesAround.indexOf('group:' + group.namePlural()) !== -1) {\n                groups.push(group);\n            }\n        });\n\n        return Promise.resolve(groups);\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport KeyboardNavigatable from 'flarum/utils/KeyboardNavigatable';\nimport ItemList from 'flarum/utils/ItemList';\nimport TextFilter from '../searchTypes/TextFilter';\nimport GroupFilter from '../searchTypes/GroupFilter';\n\n/* global m */\n\nexport default class SearchField extends Component {\n    init() {\n        super.init();\n\n        this.searchIndex = 0;\n        this.navigator = new KeyboardNavigatable();\n        this.navigator\n            .when(event => {\n                // Do not handle keyboard when TAB is pressed and there's nothing in field\n                // Without this it's impossible to TAB out of the field\n                return event.key !== 'Tab' || !!this.filter;\n            })\n            .onUp(() => {\n                if (this.searchIndex > 0) {\n                    this.searchIndex--;\n                    m.redraw();\n                }\n            })\n            .onDown(() => {\n                if (this.searchIndex < this.allSuggestions().length - 1) {\n                    this.searchIndex++;\n                    m.redraw();\n                }\n            })\n            .onSelect(() => {\n                if (this.filter) {\n                    this.selectResult(this.allSuggestions()[this.searchIndex]);\n                    m.redraw();\n                } else {\n                    this.applyFiltering();\n                }\n            })\n            .onRemove(() => {\n                this.appliedFilters.pop();\n            });\n\n        this.availableFilters = this.filterTypes().toArray();\n        this.appliedFilters = [];\n\n        this.filter = '';\n        this.focused = false;\n\n        // When the page loads, initialize UI with filters from the parameters\n        this.availableFilters.forEach(filter => {\n            filter.initializeFromParams({\n                sort: m.route.param('sort'),\n                q: m.route.param('q'),\n            }).then(resources => {\n                this.appliedFilters.push(...resources);\n                m.redraw();\n            });\n        });\n    }\n\n    filterTypes() {\n        const items = new ItemList();\n\n        items.add('text', new TextFilter(), 10);\n        items.add('group', new GroupFilter(), 20);\n\n        return items;\n    }\n\n    filterForResource(resource) {\n        return this.availableFilters.find(f => f.resourceType() === resource.data.type);\n    }\n\n    recipientLabel(resource) {\n        const filter = this.filterForResource(resource);\n\n        if (filter) {\n            return filter.renderLabel(resource);\n        }\n\n        return '[unknown]';\n    }\n\n    searchResultKind(resource) {\n        const filter = this.filterForResource(resource);\n\n        if (filter) {\n            return filter.renderKind(resource);\n        }\n\n        return '[unknown]';\n    }\n\n    selectResult(result) {\n        if (!result) {\n            return;\n        }\n\n        this.appliedFilters.push(result);\n        this.clearSuggestions();\n    }\n\n    clearSuggestions() {\n        this.filter = '';\n        this.availableFilters.forEach(filter => {\n            filter.search('');\n        });\n    }\n\n    allSuggestions() {\n        return [].concat(...this.availableFilters.map(filter => filter.suggestions));\n    }\n\n    view() {\n        const suggestions = this.allSuggestions();\n\n        const loading = this.availableFilters.some(filter => filter.loading);\n\n        return m('.Form-group', [\n            m('.UserDirectorySearchInput.FormControl', {\n                className: this.focused ? 'focus' : '',\n            }, [\n                m('span.UserDirectorySearchInput-selected', this.appliedFilters.map((recipient, index) => m('span.UserDirectorySearchInput-filter', {\n                    onclick: () => {\n                        this.appliedFilters.splice(index, 1);\n                        this.applyFiltering();\n                    },\n                    title: this.searchResultKind(recipient),\n                }, this.recipientLabel(recipient)))),\n                m('input.FormControl', {\n                    placeholder: app.translator.trans('fof-user-directory.forum.search.field.placeholder'),\n                    value: this.filter,\n                    oninput: m.withAttr('value', value => {\n                        this.filter = value;\n                        this.performNewSearch();\n                    }),\n                    onkeydown: this.navigator.navigate.bind(this.navigator),\n                    onfocus: () => {\n                        this.focused = true;\n                    },\n                    onblur: () => {\n                        this.focused = false;\n                    },\n                }),\n                loading ? LoadingIndicator.component({\n                    size: 'tiny',\n                    className: 'Button Button--icon Button--link',\n                }) : null,\n                suggestions.length ? m('ul.Dropdown-menu', suggestions.map(\n                    (result, index) => m('li', {\n                        className: this.searchIndex === index ? 'active' : '',\n                        onclick: () => {\n                            this.selectResult(result);\n                            this.applyFiltering();\n                        },\n                    }, m('button[type=button]', [\n                        m('span.UserDirectorySearchKind', this.searchResultKind(result)),\n                        this.recipientLabel(result),\n                    ]))\n                )) : null,\n            ]),\n        ]);\n    }\n\n    performNewSearch() {\n        this.searchIndex = 0;\n\n        this.availableFilters.forEach(filter => {\n            filter.search(this.filter);\n        });\n    }\n\n    applyFiltering() {\n        const params = {\n            sort: m.route.param('sort'),\n        };\n\n        this.appliedFilters.forEach(resource => {\n            const filter = this.filterForResource(resource);\n\n            if (filter) {\n                filter.applyFilter(params, resource);\n            } else {\n                console.warn('Cannot find filter class for resource', resource);\n            }\n        });\n\n        m.route(app.route('fof_user_directory', params));\n    }\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport Page from 'flarum/components/Page';\nimport ItemList from 'flarum/utils/ItemList';\nimport listItems from 'flarum/helpers/listItems';\nimport IndexPage from 'flarum/components/IndexPage';\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\nimport LogInModal from 'flarum/components/LogInModal';\nimport Select from 'flarum/components/Select';\nimport Button from 'flarum/components/Button';\nimport LinkButton from 'flarum/components/LinkButton';\nimport SelectDropdown from 'flarum/components/SelectDropdown';\nimport UserDirectoryList from './UserDirectoryList';\nimport SearchField from './SearchField';\n\n/**\n * The `IndexPage` component displays the index page, including the welcome\n * hero, the sidebar, and the discussion list.\n */\nexport default class UserDirectoryPage extends Page {\n    init() {\n        super.init();\n\n\n        // If the user is coming from the discussion list, then they have either\n        // just switched one of the parameters (filter, sort, search) or they\n        // probably want to refresh the results. We will clear the discussion list\n        // cache so that results are reloaded.\n        if (app.previous instanceof UserDirectoryPage) {\n            app.cache.fofUserDirectoryList = null;\n        }\n\n        const params = this.params();\n\n        if (app.cache.fofUserDirectoryList) {\n            // Compare the requested parameters (sort, search query) to the ones that\n            // are currently present in the cached discussion list. If they differ, we\n            // will clear the cache and set up a new discussion list component with\n            // the new parameters.\n            Object.keys(params).some(key => {\n                if (app.cache.fofUserDirectoryList.props.params[key] !== params[key]) {\n                    app.cache.fofUserDirectoryList = null;\n                    return true;\n                }\n            });\n        }\n\n        if (!app.cache.fofUserDirectoryList) {\n            app.cache.fofUserDirectoryList = new UserDirectoryList({params});\n        }\n\n        this.bodyClass = 'User--directory';\n    }\n\n    onunload() {\n        // Save the scroll position so we can restore it when we return to the\n        // discussion list.\n        app.cache.scrollTop = $(window).scrollTop();\n    }\n\n    view() {\n        return (\n            <div className=\"IndexPage\">\n                {IndexPage.prototype.hero()}\n                <div className=\"container\">\n                    <div className=\"sideNavContainer\">\n                        <nav className=\"IndexPage-nav sideNav\">\n                            <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                        </nav>\n                        <div className=\"IndexPage-results sideNavOffset\">\n                            <div className=\"IndexPage-toolbar\">\n                                <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\n                                <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\n                            </div>\n                            {app.cache.fofUserDirectoryList.render()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    config(isInitialized, context) {\n        super.config(...arguments);\n\n        if (isInitialized) return;\n\n        extend(context, 'onunload', () => $('#app').css('min-height', ''));\n\n        app.setTitle('');\n        app.setTitleCount(0);\n\n        // Work out the difference between the height of this hero and that of the\n        // previous hero. Maintain the same scroll position relative to the bottom\n        // of the hero so that the sidebar doesn't jump around.\n        const scrollTop = app.cache.scrollTop;\n\n        $('#app').css('min-height', $(window).height());\n\n        // Scroll to the remembered position. We do this after a short delay so that\n        // it happens after the browser has done its own \"back button\" scrolling,\n        // which isn't right. https://github.com/flarum/core/issues/835\n        const scroll = () => $(window).scrollTop(scrollTop);\n        scroll();\n        setTimeout(scroll, 1);\n    }\n\n    /**\n     * Build an item list for the sidebar of the index page. By default this is a\n     * \"New Discussion\" button, and then a DropdownSelect component containing a\n     * list of navigation items.\n     *\n     * @return {ItemList}\n     */\n    sidebarItems() {\n        const items = IndexPage.prototype.sidebarItems();\n\n        items.replace('nav',\n            SelectDropdown.component({\n                children: this.navItems(this).toArray(),\n                buttonClassName: 'Button',\n                className: 'App-titleControl'\n            })\n        );\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the navigation in the sidebar of the index page. By\n     * default this is just the 'All Discussions' link.\n     *\n     * @return {ItemList}\n     */\n    navItems() {\n        const items = IndexPage.prototype.navItems();\n        const params = this.stickyParams();\n\n        items.add('fof-user-directory',\n            LinkButton.component({\n                href: app.route('fof_user_directory', params),\n                children: app.translator.trans('fof-user-directory.forum.page.nav'),\n                icon: 'far fa-address-book'\n            }),\n            85\n        );\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the part of the toolbar which is concerned with how\n     * the results are displayed. By default this is just a select box to change\n     * the way discussions are sorted.\n     *\n     * @return {ItemList}\n     */\n    viewItems() {\n        const items = new ItemList();\n        const sortMap = app.cache.fofUserDirectoryList.sortMap();\n\n        const sortOptions = {};\n        for (const i in sortMap) {\n            sortOptions[i] = app.translator.trans('fof-user-directory.forum.page.sort.' + i);\n        }\n\n        items.add('sort',\n            Select.component({\n                options: sortOptions,\n                value: this.params().sort || Object.keys(sortMap)[0],\n                onchange: this.changeSort.bind(this)\n            })\n        );\n\n        items.add('search', SearchField.component());\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the part of the toolbar which is about taking action\n     * on the results. By default this is just a \"mark all as read\" button.\n     *\n     * @return {ItemList}\n     */\n    actionItems() {\n        const items = new ItemList();\n\n        items.add('refresh',\n            Button.component({\n                title: app.translator.trans('core.forum.index.refresh_tooltip'),\n                icon: 'fas fa-sync',\n                className: 'Button Button--icon',\n                onclick: () => {\n                    app.cache.fofUserDirectoryList.refresh();\n                    if (app.session.user) {\n                        app.store.find('users', app.session.user.id());\n                        m.redraw();\n                    }\n                }\n            })\n        );\n\n        return items;\n    }\n\n    /**\n     * Return the current search query, if any. This is implemented to activate\n     * the search box in the header.\n     *\n     * @see Search\n     * @return {String}\n     */\n    searching() {\n        return this.params().q;\n    }\n\n    /**\n     * Redirect to the index page without a search filter. This is called when the\n     * 'x' is clicked in the search box in the header.\n     *\n     * @see Search\n     */\n    clearSearch() {\n        const params = this.params();\n        delete params.q;\n\n        m.route(app.route(this.props.routeName, params));\n    }\n\n    /**\n     * Redirect to the index page using the given sort parameter.\n     *\n     * @param {String} sort\n     */\n    changeSort(sort) {\n        const params = this.params();\n\n        if (sort === Object.keys(app.cache.fofUserDirectoryList.sortMap())[0]) {\n            delete params.sort;\n        } else {\n            params.sort = sort;\n        }\n\n        m.route(app.route(this.props.routeName, params));\n    }\n\n    /**\n     * Get URL parameters that stick between filter changes.\n     *\n     * @return {Object}\n     */\n    stickyParams() {\n        return {\n            sort: m.route.param('sort'),\n            q: m.route.param('q')\n        };\n    }\n\n    /**\n     * Get parameters to pass to the UserDirectoryList component.\n     *\n     * @return {Object}\n     */\n    params() {\n        const params = this.stickyParams();\n\n        params.filter = m.route.param('filter');\n\n        return params;\n    }\n\n    /**\n     * Log the user in and then open the composer for a new discussion.\n     *\n     * @return {Promise}\n     */\n    newDiscussion() {\n        const deferred = m.deferred();\n\n        if (app.session.user) {\n            this.composeNewDiscussion(deferred);\n        } else {\n            app.modal.show(\n                new LogInModal({\n                    onlogin: this.composeNewDiscussion.bind(this, deferred)\n                })\n            );\n        }\n\n        return deferred.promise;\n    }\n\n    /**\n     * Initialize the composer for a new discussion.\n     *\n     * @param {Deferred} deferred\n     * @return {Promise}\n     */\n    composeNewDiscussion(deferred) {\n        const component = new DiscussionComposer({user: app.session.user});\n\n        app.composer.load(component);\n        app.composer.show();\n\n        deferred.resolve(component);\n\n        return deferred.promise;\n    }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Model from 'flarum/Model';\n\n/**\n * Special model used only client-side to hold a free text search value in the search field\n */\nexport default class Text extends Model {\n    text = Model.attribute('text');\n}\n","import SearchField from './SearchField';\nimport UserDirectoryPage from './UserDirectoryPage';\n\nexport const components = {\n    SearchField,\n    UserDirectoryPage,\n}\n","import AbstractType from './AbstractType';\nimport GroupFilter from './GroupFilter';\nimport TextFilter from './TextFilter';\n\nexport const searchTypes = {\n    AbstractType,\n    GroupFilter,\n    TextFilter,\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport UsersSearchSource from 'flarum/components/UsersSearchSource';\nimport LinkButton from 'flarum/components/LinkButton';\nimport IndexPage from 'flarum/components/IndexPage';\nimport UserDirectoryPage from './components/UserDirectoryPage';\nimport Text from './models/Text';\n\n// Allow other extensions to extend the page\nexport {UserDirectoryPage}; // Backward compatibility for when the component was placed at the root of the export\nexport * from './components';\nexport * from './searchTypes';\n\napp.initializers.add('fof-user-directory', app => {\n    app.routes.fof_user_directory = {path: '/users', component: UserDirectoryPage.component()};\n\n    app.store.models['fof-user-directory-text'] = Text;\n\n    extend(UsersSearchSource.prototype, 'view', function (view, query) {\n        if (!view) {\n            return;\n        }\n\n        query = query.toLowerCase();\n\n        view.splice(1, 0, <li>\n            {LinkButton.component({\n                icon: 'fas fa-search',\n                children: app.translator.trans('fof-user-directory.forum.search.users_heading', {query}),\n                href: app.route('fof_user_directory', {q: query}),\n            })}\n        </li>);\n    });\n\n    extend(IndexPage.prototype, 'navItems', items => {\n        if (app.forum.attribute('canSeeUserDirectoryLink')) {\n            items.add('fof-user-directory',\n                LinkButton.component({\n                    href: app.route('fof_user_directory'),\n                    children: app.translator.trans('fof-user-directory.forum.page.nav'),\n                    icon: 'far fa-address-book'\n                }),\n                85\n            );\n        }\n    });\n});\n"],"sourceRoot":""}
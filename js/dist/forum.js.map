{"version":3,"file":"forum.js","mappings":";;;;;;;;;;;;;;;;AAA+C;AAC/C,SAASC,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAChC,OAAO,CAACD,CAAC,GAAGH,6DAAa,CAACG,CAAC,CAAC,KAAKD,CAAC,GAAGG,MAAM,CAACC,cAAc,CAACJ,CAAC,EAAEC,CAAC,EAAE;IAC/DI,KAAK,EAAEH,CAAC;IACRI,UAAU,EAAE,CAAC,CAAC;IACdC,YAAY,EAAE,CAAC,CAAC;IAChBC,QAAQ,EAAE,CAAC;EACb,CAAC,CAAC,GAAGR,CAAC,CAACC,CAAC,CAAC,GAAGC,CAAC,EAAEF,CAAC;AAClB;;;;;;;;;;;;;;;;;ACRkC;AAClC,SAASW,WAAWA,CAACT,CAAC,EAAED,CAAC,EAAE;EACzB,IAAI,QAAQ,IAAIS,sDAAO,CAACR,CAAC,CAAC,IAAI,CAACA,CAAC,EAAE,OAAOA,CAAC;EAC1C,IAAIF,CAAC,GAAGE,CAAC,CAACU,MAAM,CAACD,WAAW,CAAC;EAC7B,IAAI,KAAK,CAAC,KAAKX,CAAC,EAAE;IAChB,IAAIa,CAAC,GAAGb,CAAC,CAACc,IAAI,CAACZ,CAAC,EAAED,CAAC,IAAI,SAAS,CAAC;IACjC,IAAI,QAAQ,IAAIS,sDAAO,CAACG,CAAC,CAAC,EAAE,OAAOA,CAAC;IACpC,MAAM,IAAIE,SAAS,CAAC,8CAA8C,CAAC;EACrE;EACA,OAAO,CAAC,QAAQ,KAAKd,CAAC,GAAGe,MAAM,GAAGC,MAAM,EAAEf,CAAC,CAAC;AAC9C;;;;;;;;;;;;;;;;;;ACVkC;AACS;AAC3C,SAASJ,aAAaA,CAACI,CAAC,EAAE;EACxB,IAAIW,CAAC,GAAGF,2DAAW,CAACT,CAAC,EAAE,QAAQ,CAAC;EAChC,OAAO,QAAQ,IAAIQ,sDAAO,CAACG,CAAC,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,EAAE;AAC5C;;;;;;;;;;;;;;;;ACLA,SAASH,OAAOA,CAACQ,CAAC,EAAE;EAClB,yBAAyB;;EAEzB,OAAOR,OAAO,GAAG,UAAU,IAAI,OAAOE,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACO,QAAQ,GAAG,UAAUD,CAAC,EAAE;IAChG,OAAO,OAAOA,CAAC;EACjB,CAAC,GAAG,UAAUA,CAAC,EAAE;IACf,OAAOA,CAAC,IAAI,UAAU,IAAI,OAAON,MAAM,IAAIM,CAAC,CAACE,WAAW,KAAKR,MAAM,IAAIM,CAAC,KAAKN,MAAM,CAACS,SAAS,GAAG,QAAQ,GAAG,OAAOH,CAAC;EACrH,CAAC,EAAER,OAAO,CAACQ,CAAC,CAAC;AACf;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChBqD;AACJ;AAClC,8BAA8B,wEAAM;AACnD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,wCAAwC,sEAAI;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBmC;AACa;AACyB;AACrB;AACsB;AAC7B;AACM;AACE;AACtC,0BAA0B,gEAAS;AAClD;AACA;AACA;AACA,yBAAyB,gFAAmB;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,yDAAyD,4BAA4B;AACrF,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,mBAAmB,kEAAc;AACjC;AACA,eAAe,mEAAQ;AACvB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK,gBAAgB,kFAAgB;AACrC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,sBAAsB,8DAAQ;AAC9B,0BAA0B,+DAAU;AACpC,2BAA2B,gEAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA,iBAAiB,aAAa,EAAE,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6DAAS;AACzB;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC3KwD;AACJ;AACE;AACvC,4BAA4B,yEAAQ;AACnD;AACA;AACA,sBAAsB,qEAAQ;AAC9B;AACA;AACA,WAAW,oEAAS;AACpB,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdmC;AACa;AACC;AACuB;AAClB;AACF;AACrC,gCAAgC,gEAAS;AACxD;AACA;AACA;AACA,iBAAiB,oEAAS;AAC1B;AACA,SAAS,8EAAiB;AAC1B,OAAO;AACP;AACA;AACA,QAAQ;AACR,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,sBAAsB,qEAAQ;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,qEAAQ;AAC9B;AACA;AACA,KAAK,IAAI,sEAAI;AACb;AACA,KAAK,QAAQ,kEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CmC;AACa;AACK;AACoB;AACV;AACH;;AAE5D;AACA;AACA;AACe,gCAAgC,gEAAS;AACxD;AACA;AACA;AACA,MAAM;AACN;AACA,0BAA0B,6DAAS;AACnC;AACA;AACA,gBAAgB,0FAA0B;AAC1C,MAAM;AACN,gBAAgB,gFAAgB;AAChC;AACA;AACA,OAAO,EAAE,kEAAc;AACvB;AACA;AACA,mBAAmB,kEAAc;AACjC;AACA;AACA,OAAO,EAAE,qFAAqB;AAC9B;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO,EAAE,8DAAqB;AAC9B;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACpDgD;AACQ;AACZ;AACgB;AAC7C,oCAAoC,gEAAS;AAC5D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,uCAAuC,wCAAwC;AAC/E;AACA;AACA;AACA;AACA,KAAK,kBAAkB,sDAAa,yBAAyB,8DAAqB;AAClF;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBgE;AACE;AAC/B;AACc;AACG;AACI;AACE;AACL;AACA;AACQ;AACQ;AACZ;AACC;AACN;AACU;AACd;AACR;AACmB;;AAE3D;AACA;AACA;AACe,gCAAgC,sEAAI;AACnD;AACA;AACA,qBAAqB,mEAAkB,GAAG;AAC1C,6BAA6B,8DAAU;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,QAAQ,oEAAgB,0BAA0B,6DAAS;AAC3D;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW,eAAe,kEAAc;AAC5C;AACA;AACA;AACA,IAAI,gEAAY,CAAC,uEAAW,CAAC,kEAAc;AAC3C;AACA;AACA,aAAa,8EAAa;AAC1B;AACA,kBAAkB,kFAAmB;AACrC,uBAAuB,6EAAY;AACnC,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK,EAAE,sEAAS;AAChB;AACA,KAAK,EAAE,sEAAS,oCAAoC,2DAAiB;AACrE;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kBAAkB,qFAAsB;AACxC,4BAA4B,yFAAwB;AACpD;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kBAAkB,qFAAsB;AACxC;AACA,oCAAoC,oFAAoB;AACxD,YAAY,6DAAS;AACrB;AACA,KAAK,EAAE,kEAAc;AACrB;AACA;AACA;AACA,sBAAsB,qEAAQ;AAC9B;AACA;AACA;AACA,uBAAuB,kEAAc;AACrC;AACA,sBAAsB,gFAAgB;AACtC;AACA,4CAA4C,6DAAS;AACrD;AACA,KAAK;AACL,8BAA8B,mFAAkB;AAChD;AACA,aAAa,kEAAc;AAC3B;AACA;AACA,KAAK;AACL,wBAAwB,qDAAW;AACnC;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,qEAAQ;AAC9B,IAAI,6DAAS;AACb,oCAAoC,yDAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,QAAQ,oEAAgB,0BAA0B,6DAAS;AAC3D,2BAA2B,yDAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE,kEAAc;AACvB,6BAA6B,oFAAmB;AAChD;AACA;AACA;AACA;AACA,sBAAsB,qEAAQ;AAC9B,yBAAyB,gFAAgB;AACzC,aAAa,kEAAc;AAC3B;AACA;AACA;AACA;AACA,YAAY,iEAAW;AACvB,UAAU,6DAAS,eAAe,+DAAW;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,iBAAiB,6DAAS;AAC1B;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK,EAAE,gBAAgB,QAAQ,KAAK;AACtD,OAAO;AACP;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6DAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC7NwD;AACJ;AACE;AACL;AACd;AACpB,oCAAoC,yEAAQ;AAC3D;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI,sEAAI;AACb;AACA,KAAK,GAAG,kEAAc;AACtB;AACA,KAAK;AACL;AACA;AACA,KAAK,IAAI,sEAAI;AACb;AACA,KAAK,GAAG,kEAAc;AACtB;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACpCgD;AACR;AACI;AACQ;AACQ;AACR;AACQ;AACrD;AACP,iBAAiB;AACjB,aAAa;AACb,eAAe;AACf,mBAAmB;AACnB,uBAAuB;AACvB,mBAAmB;AACnB,uBAAuB;AACvB;AACA;;;;;;;;;;;;;;;;;;;AChB6C;AACkB;AAC9B;AACjC,iEAAe,KAAK,uEAAa;AACjC,qCAAqC,qEAAiB,OAAO,sEAAY;AACzE,gCAAgC,oDAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;ACLH;AACW;AACgB;AACvD;AACP,MAAM,6DAAS,yCAAyC,6DAAS;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,6DAAS;AAC7B;AACA,6DAA6D,6DAAS;AACtE,sBAAsB,WAAW;AACjC,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;AACL;AACA;AACe;AACf,EAAE,4DAAM,CAAC,sFAAqB;AAC9B,EAAE,4DAAM,CAAC,sFAAqB;AAC9B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCgE;AAC7B;AACqB;AACE;AACG;AACG;AACjD;AACf,EAAE,4DAAM,CAAC,uFAAsB;AAC/B,QAAQ,6DAAS,yCAAyC,6DAAS;AACnE,wCAAwC,4EAAU;AAClD,cAAc,6DAAS;AACvB;AACA,OAAO,EAAE,kEAAc;AACvB;AACA,GAAG;AACH,EAAE,8DAAQ,CAAC,oFAAmB;AAC9B,QAAQ,+DAAW;AACnB,eAAe,qEAAiB;AAChC;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtBmC;AACW;AAC4B;AACb;AAC9C;AACf,EAAE,4DAAM,CAAC,4FAA2B;AACpC,kBAAkB,6DAAS,yCAAyC,6DAAS;AAC7E;AACA;AACA;AACA,sCAAsC,4EAAU;AAChD;AACA,YAAY,6DAAS;AACrB;AACA,OAAO;AACP;AACA,KAAK,EAAE,kEAAc;AACrB;AACA,KAAK;AACL,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBmC;AAC4B;AACA;AACQ;AACV;AACf;AACa;AACG;AACY;AAChB;AACb;;AAE7C;AACA;AACA;AACqH;AACrH,oEAAgB;AAChB,EAAE,wEAAiB;AACnB,EAAE,8EAAuB;AACzB,EAAE,sEAAe;AACjB,CAAC;AAC4B;;;;;;;;;;;;;;;;;;;ACrB2C;AAChC;;AAExC;AACA;AACA;AACe,mBAAmB,4DAAK;AACvC;AACA;AACA,IAAI,qFAAe,eAAe,oEAAe;AACjD;AACA;AACA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClEmC;AACY;AACE;AACP;;AAE1C;;AAEe,0BAA0B,qDAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAS;AACb;AACA,yBAAyB,4EAAc;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,kEAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,mBAAmB,8EAAc;AAC3C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAS;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9DmC;AACO;;AAE1C;;AAEe,yBAAyB,qDAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAAS;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,kEAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,6DAAS;AACnE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;AC3C0C;AACF;AACF;AAC/B;AACP,cAAc;AACd,aAAa;AACb,YAAY;AACZ;AACA;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACiD;AAClC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6DAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3GA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA,4EAA4E;UAC5E;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@fof/user-directory/./src/common/utils/SortMap.js","webpack://@fof/user-directory/./src/forum/components/CheckableButton.js","webpack://@fof/user-directory/./src/forum/components/SearchField.js","webpack://@fof/user-directory/./src/forum/components/SmallUserCard.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryHero.tsx","webpack://@fof/user-directory/./src/forum/components/UserDirectoryList.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryListItem.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryPage.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryUserCard.js","webpack://@fof/user-directory/./src/forum/components/index.ts","webpack://@fof/user-directory/./src/forum/extend.ts","webpack://@fof/user-directory/./src/forum/extenders/extendCommentPost.tsx","webpack://@fof/user-directory/./src/forum/extenders/extendIndexPage.tsx","webpack://@fof/user-directory/./src/forum/extenders/extendUsersSearchSource.tsx","webpack://@fof/user-directory/./src/forum/index.ts","webpack://@fof/user-directory/./src/forum/models/Text.ts","webpack://@fof/user-directory/./src/forum/searchTypes/AbstractType.js","webpack://@fof/user-directory/./src/forum/searchTypes/GroupFilter.js","webpack://@fof/user-directory/./src/forum/searchTypes/TextFilter.js","webpack://@fof/user-directory/./src/forum/searchTypes/index.js","webpack://@fof/user-directory/./src/forum/states/UserDirectoryState.js","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/Component')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/Model')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/Button')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/Dropdown')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/Icon')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/LinkButton')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/LoadingIndicator')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/Page')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/Placeholder')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/Select')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/SelectDropdown')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/components/Separator')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/extend')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/extenders')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/helpers/listItems')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/helpers/textContrastClass')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/models/Group')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/utils/ItemList')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/utils/KeyboardNavigatable')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/utils/classList')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/utils/extractText')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/utils/humanTime')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/utils/withAttr')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'forum/app')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'forum/components/CommentPost')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'forum/components/IndexPage')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'forum/components/IndexSidebar')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'forum/components/PageStructure')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'forum/components/UserCard')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'forum/components/UsersSearchSource')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'utils/ItemList')\"","webpack://@fof/user-directory/webpack/bootstrap","webpack://@fof/user-directory/webpack/runtime/compat get default export","webpack://@fof/user-directory/webpack/runtime/define property getters","webpack://@fof/user-directory/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/user-directory/webpack/runtime/make namespace object","webpack://@fof/user-directory/./forum.ts"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","/**\n * The sort options.\n * We use a class and not just a POJO/function because we want extensions to be able to extend it\n */\nexport default class SortMap {\n  sortMap() {\n    return {\n      username_az: 'username',\n      username_za: '-username',\n      newest: '-joinedAt',\n      oldest: 'joinedAt',\n      most_discussions: '-discussionCount',\n      least_discussions: 'discussionCount'\n    };\n  }\n}\nflarum.reg.add('fof-user-directory', 'common/utils/SortMap', SortMap);","import Button from 'flarum/common/components/Button';\nimport Icon from 'flarum/common/components/Icon';\nexport default class CheckableButton extends Button {\n  /**\n   * Get the template for the button's content.\n   *\n   * @return {*}\n   * @protected\n   */\n  getButtonContent(children) {\n    const prev = super.getButtonContent(children);\n    if (this.attrs.checked) prev.push(m(Icon, {\n      name: \"fas fa-check\",\n      className: \"Button-icon ButtonCheck\"\n    }));\n    return prev;\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/components/CheckableButton', CheckableButton);","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport KeyboardNavigatable from 'flarum/common/utils/KeyboardNavigatable';\nimport ItemList from 'flarum/utils/ItemList';\nimport TextFilter from '../searchTypes/TextFilter';\nimport GroupFilter from '../searchTypes/GroupFilter';\nexport default class SearchField extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.searchIndex = 0;\n    this.navigator = new KeyboardNavigatable();\n    this.navigator.when(event => {\n      // Do not handle keyboard when TAB is pressed and there's nothing in field\n      // Without this it's impossible to TAB out of the field\n      return event.key !== 'Tab' || !!this.filter;\n    }).onUp(() => {\n      if (this.searchIndex > 0) {\n        this.searchIndex--;\n        m.redraw();\n      }\n    }).onDown(() => {\n      if (this.searchIndex < this.allSuggestions().length - 1) {\n        this.searchIndex++;\n        m.redraw();\n      }\n    }).onSelect(() => {\n      if (this.filter) {\n        this.selectResult(this.allSuggestions()[this.searchIndex]);\n        m.redraw();\n      } else {\n        this.applyFiltering();\n      }\n    }).onRemove(() => {\n      this.appliedFilters.pop();\n    });\n    this.availableFilters = this.filterTypes().toArray();\n    this.appliedFilters = [];\n    this.filter = '';\n    this.focused = false;\n\n    // When the page loads, initialize UI with filters from the parameters\n    this.availableFilters.forEach(filter => {\n      filter.initializeFromParams({\n        sort: m.route.param('sort'),\n        q: m.route.param('q')\n      }).then(resources => {\n        this.appliedFilters.push(...resources);\n        m.redraw();\n      });\n    });\n  }\n  view() {\n    const suggestions = this.allSuggestions();\n    const loading = this.availableFilters.some(filter => filter.loading);\n    return m(\"div\", {\n      className: \"Form-group Usersearchbox\"\n    }, m(\"label\", {\n      className: `UserDirectorySearchInput FormControl ${this.focused ? 'focus' : ''}`\n    }, m(\"span\", {\n      className: \"UserDirectorySearchInput-selected\"\n    }, this.appliedFilters.map((recipient, index) => m(\"span\", {\n      className: \"UserDirectorySearchInput-filter\",\n      onclick: () => {\n        this.appliedFilters.splice(index, 1);\n        this.applyFiltering();\n      },\n      title: this.searchResultKind(recipient)\n    }, this.recipientLabel(recipient)))), m(\"input\", {\n      className: \"FormControl\",\n      placeholder: app.translator.trans('fof-user-directory.forum.search.field.placeholder'),\n      value: this.filter,\n      oninput: withAttr('value', value => {\n        this.filter = value;\n        this.performNewSearch();\n      }),\n      onkeydown: this.navigator.navigate.bind(this.navigator),\n      onfocus: () => {\n        this.focused = true;\n      },\n      onblur: () => {\n        this.focused = false;\n      }\n    }), loading && m(LoadingIndicator, null), !!suggestions.length && m(\"ul\", {\n      className: \"Dropdown-menu\"\n    }, suggestions.map((result, index) => m(\"li\", {\n      className: this.searchIndex === index ? 'active' : '',\n      onclick: () => {\n        this.selectResult(result);\n        this.applyFiltering();\n      }\n    }, m(\"button\", {\n      type: \"button\"\n    }, m(\"span\", {\n      className: \"UserDirectorySearchKind\"\n    }, this.searchResultKind(result)), this.recipientLabel(result)))))));\n  }\n  filterTypes() {\n    const items = new ItemList();\n    items.add('text', new TextFilter(), 10);\n    items.add('group', new GroupFilter(), 20);\n    return items;\n  }\n  filterForResource(resource) {\n    return this.availableFilters.find(f => f.resourceType() === resource.data.type);\n  }\n  recipientLabel(resource) {\n    const filter = this.filterForResource(resource);\n    if (filter) {\n      return filter.renderLabel(resource);\n    }\n    return '[unknown]';\n  }\n  searchResultKind(resource) {\n    const filter = this.filterForResource(resource);\n    if (filter) {\n      return filter.renderKind(resource);\n    }\n    return '[unknown]';\n  }\n  selectResult(result) {\n    if (!result) {\n      return;\n    }\n    this.appliedFilters.push(result);\n    this.clearSuggestions();\n  }\n  clearSuggestions() {\n    this.filter = '';\n    this.availableFilters.forEach(filter => {\n      filter.search('');\n    });\n  }\n  allSuggestions() {\n    return [].concat(...this.availableFilters.map(filter => filter.suggestions));\n  }\n  performNewSearch() {\n    this.searchIndex = 0;\n    this.availableFilters.forEach(filter => {\n      filter.search(this.filter);\n    });\n    this.attrs.state.refreshParams({\n      ...this.attrs.state.getParams(),\n      qBuilder: this.qBuilder()\n    });\n  }\n  qBuilder(params) {\n    if (params === void 0) {\n      params = {};\n    }\n    this.appliedFilters.forEach(resource => {\n      const filter = this.filterForResource(resource);\n      if (filter) {\n        filter.applyFilter(params, resource);\n      } else {\n        console.warn('Cannot find filter class for resource', resource);\n      }\n    });\n    return {\n      filter: `${this.filter} ${params.q || ''}`\n    };\n  }\n  applyFiltering() {\n    const params = {\n      sort: m.route.param('sort')\n    };\n    this.qBuilder(params);\n    m.route.set(app.route('fof_user_directory', params));\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/components/SearchField', SearchField);","import UserCard from 'flarum/forum/components/UserCard';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport humanTime from 'flarum/common/utils/humanTime';\nexport default class SmallUserCard extends UserCard {\n  //Overriding infoItems so that other extensions can separately add items to small cards\n  infoItems() {\n    const items = new ItemList();\n    const user = this.attrs.user;\n    items.add('joined', app.translator.trans('core.forum.user.joined_date_text', {\n      ago: humanTime(user.joinTime())\n    }));\n    return items;\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/components/SmallUserCard', SmallUserCard);","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Icon from 'flarum/common/components/Icon';\nimport textContrastClass from 'flarum/common/helpers/textContrastClass';\nimport classList from 'flarum/common/utils/classList';\nimport ItemList from 'flarum/common/utils/ItemList';\nexport default class UserDirectoryHero extends Component {\n  view() {\n    const color = this.heroColor();\n    return m(\"header\", {\n      className: classList('Hero', 'UserDirectoryHero', {\n        'UserDirectoryHero--colored': color,\n        [textContrastClass(color)]: color\n      }),\n      style: color ? {\n        '--hero-bg': color\n      } : undefined\n    }, m(\"div\", {\n      className: \"container\"\n    }, this.viewItems().toArray()));\n  }\n  viewItems() {\n    const items = new ItemList();\n    items.add('content', m(\"div\", {\n      className: \"containerNarrow\"\n    }, this.contentItems().toArray()), 80);\n    return items;\n  }\n  contentItems() {\n    const items = new ItemList();\n    items.add('user-directory-title', m(\"h1\", {\n      className: \"Hero-title\"\n    }, m(Icon, {\n      name: this.heroIcon()\n    }), \" \", app.translator.trans('fof-user-directory.forum.hero.title')), 100);\n    return items;\n  }\n  heroColor() {\n    // Example return a color string to display a colored hero\n    //return app.forum.attribute<string>('themeSecondaryColor');\n    return null;\n  }\n  heroIcon() {\n    return 'far fa-address-book';\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/components/UserDirectoryHero', UserDirectoryHero);","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport UserDirectoryListItem from './UserDirectoryListItem';\n\n/**\n * Based on Flarum's DiscussionList\n */\nexport default class UserDirectoryList extends Component {\n  view() {\n    const {\n      state\n    } = this.attrs;\n    const params = state.getParams();\n    const useSmallCards = app.forum.attribute('userDirectorySmallCards');\n    let loading;\n    if (state.isLoading()) {\n      loading = LoadingIndicator.component();\n    } else if (state.moreResults) {\n      loading = Button.component({\n        className: 'Button',\n        onclick: state.loadMore.bind(state)\n      }, app.translator.trans('fof-user-directory.forum.page.load_more_button'));\n    }\n    if (state.empty()) {\n      const text = app.translator.trans('fof-user-directory.forum.page.empty_text');\n      return m(\"div\", {\n        className: \"DiscussionList\"\n      }, Placeholder.component({\n        text\n      }));\n    }\n    return m(\"div\", {\n      className: 'UserDirectoryList' + (state.isSearchResults() ? ' UserDirectoryList--searchResults' : '') + (useSmallCards ? ' UserDirectoryList--small-cards' : '')\n    }, m(\"ul\", {\n      className: \"UserDirectoryList-users\"\n    }, state.users.map(user => {\n      return m(\"li\", {\n        key: user.id(),\n        \"data-id\": user.id()\n      }, UserDirectoryListItem.component({\n        user,\n        params,\n        useSmallCards\n      }));\n    })), m(\"div\", {\n      className: \"UserDirectoryList-loadMore\"\n    }, loading));\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/components/UserDirectoryList', UserDirectoryList);","import Component from 'flarum/common/Component';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport SmallUserCard from './SmallUserCard';\nimport UserDirectoryUserCard from './UserDirectoryUserCard';\nexport default class UserDirectoryListItem extends Component {\n  view(vnode) {\n    const {\n      user,\n      useSmallCards\n    } = this.attrs;\n    const attributes = {\n      user,\n      className: `UserCard--directory${useSmallCards ? ' UserCard--small' : ''}`,\n      controlsButtonClassName: 'Button Button--icon Button--flat'\n    };\n    return m(\"div\", {\n      className: \"User\"\n    }, useSmallCards ? SmallUserCard.component(attributes) : UserDirectoryUserCard.component(attributes));\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/components/UserDirectoryListItem', UserDirectoryListItem);","import IndexSidebar from 'flarum/forum/components/IndexSidebar';\nimport PageStructure from 'flarum/forum/components/PageStructure';\nimport app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Select from 'flarum/common/components/Select';\nimport Button from 'flarum/common/components/Button';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport SelectDropdown from 'flarum/common/components/SelectDropdown';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport extractText from 'flarum/common/utils/extractText';\nimport UserDirectoryList from './UserDirectoryList';\nimport UserDirectoryState from '../states/UserDirectoryState';\nimport CheckableButton from './CheckableButton';\nimport SearchField from './SearchField';\nimport Separator from 'flarum/common/components/Separator';\n\n/**\n * This page re-uses Flarum's IndexPage CSS classes\n */\nexport default class UserDirectoryPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.state = new UserDirectoryState({});\n    this.state.refreshParams(app.search.state.params());\n    this.bodyClass = 'User--directory';\n    let idSegments = [];\n    if (this.params().q) {\n      Array.from(this.params().q.matchAll(/group:([\\d,]+)/g)).forEach(match => {\n        idSegments.push(match[1]);\n      });\n    }\n    this.enabledGroupFilters = idSegments.join(',').split(',').filter(id => id);\n    this.enabledSpecialGroupFilters = [];\n    if (app.initializers.has('flarum-suspend') && app.forum.attribute('hasSuspendPermission')) {\n      // If there is a special group filter int the params, enable it here\n      if (this.params()?.q?.includes('is:suspended')) {\n        this.enabledSpecialGroupFilters['flarum-suspend'] = 'is:suspended';\n      }\n    }\n    app.history.push('users', app.translator.trans('fof-user-directory.forum.header.back_to_user_directory_tooltip'));\n  }\n  oncreate(vnode) {\n    super.oncreate(vnode);\n    app.setTitle(extractText(app.translator.trans('fof-user-directory.forum.page.nav')));\n  }\n  view() {\n    return m(PageStructure, {\n      className: \"UserDirectoryPage\",\n      hero: () => IndexPage.prototype.hero(),\n      sidebar: () => m(IndexSidebar, null)\n    }, m(\"div\", {\n      className: \"UserDirectoryPage-toolbar\"\n    }, m(\"ul\", {\n      className: \"IndexPage-toolbar-view\"\n    }, listItems(this.viewItems().toArray())), m(\"ul\", {\n      className: \"IndexPage-toolbar-action\"\n    }, listItems(this.actionItems().toArray()))), m(UserDirectoryList, {\n      state: this.state\n    }));\n  }\n\n  /**\n   * Our own sidebar. Re-uses Index.sidebarItems as the base\n   * Elements added here will only show up on the user directory page\n   *\n   * @return {ItemList}\n   */\n  sidebarItems() {\n    const items = IndexSidebar.prototype.items();\n    items.setContent('nav', SelectDropdown.component({\n      buttonClassName: 'Button',\n      className: 'App-titleControl'\n    }, this.navItems().toArray()));\n    return items;\n  }\n\n  /**\n   * Our own sidebar navigation. Re-uses Index.navItems as the base\n   * Elements added here will only show up on the user directory page\n   *\n   * @return {ItemList}\n   */\n  navItems() {\n    const items = IndexSidebar.prototype.navItems();\n    const params = this.stickyParams();\n    items.add('fof-user-directory', LinkButton.component({\n      href: app.route('fof_user_directory', params),\n      icon: 'far fa-address-book'\n    }, app.translator.trans('fof-user-directory.forum.page.nav')), 85);\n    return items;\n  }\n  viewItems() {\n    const items = new ItemList();\n    const sortMap = this.state.sortMap();\n    const sortOptions = {};\n    for (const i in sortMap) {\n      sortOptions[i] = app.translator.trans('fof-user-directory.lib.sort.' + i);\n    }\n    items.add('sort', Select.component({\n      options: sortOptions,\n      value: this.state.getParams().sort || app.forum.attribute('userDirectoryDefaultSort'),\n      onchange: this.changeParams.bind(this)\n    }), 100);\n    items.add('filterGroups', Dropdown.component({\n      caretIcon: 'fas fa-filter',\n      label: app.translator.trans('fof-user-directory.forum.page.filter_button'),\n      buttonClassName: 'FormControl',\n      className: 'GroupFilterDropdown'\n    }, this.groupItems().toArray()), 80);\n    items.add('search', SearchField.component({\n      state: this.state\n    }), 60);\n    return items;\n  }\n  groupItems() {\n    const items = new ItemList();\n    app.store.all('groups').filter(group => group.id() !== '2' && group.id() !== '3').forEach(group => {\n      items.add(group.namePlural(), CheckableButton.component({\n        className: 'GroupFilterButton',\n        icon: group.icon(),\n        checked: this.enabledGroupFilters.includes(group.id()),\n        onclick: () => {\n          const id = group.id();\n          if (this.enabledGroupFilters.includes(id)) {\n            this.enabledGroupFilters = this.enabledGroupFilters.filter(e => e != id);\n          } else {\n            this.enabledGroupFilters.push(id);\n            // Empty the special group filters\n            this.enabledSpecialGroupFilters = [];\n          }\n          this.changeParams(this.params().sort);\n        }\n      }, group.namePlural()));\n    });\n    if (app.initializers.has('flarum-suspend') && app.forum.attribute('hasSuspendPermission')) {\n      items.add('suspend', CheckableButton.component({\n        className: 'GroupFilterButton',\n        icon: 'fas fa-ban',\n        checked: this.enabledSpecialGroupFilters['flarum-suspend'] === 'is:suspended',\n        onclick: () => {\n          const id = 'flarum-suspend';\n          if (this.enabledSpecialGroupFilters[id] === 'is:suspended') {\n            this.enabledSpecialGroupFilters[id] = '';\n          } else {\n            this.enabledSpecialGroupFilters[id] = 'is:suspended';\n            // Empty the group filters\n            this.enabledGroupFilters = [];\n          }\n          this.changeParams(this.params().sort);\n        }\n      }, app.translator.trans('flarum-suspend.forum.user_badge.suspended_tooltip')), 90);\n      items.add('seperator', Separator.component(), 50);\n    }\n    return items;\n  }\n  actionItems() {\n    const items = new ItemList();\n    items.add('refresh', Button.component({\n      title: app.translator.trans('fof-user-directory.forum.page.refresh_tooltip'),\n      icon: 'fas fa-sync',\n      className: 'Button Button--icon',\n      onclick: () => {\n        this.state.refresh();\n        if (app.session.user) {\n          app.store.find('users', app.session.user.id());\n          m.redraw();\n        }\n      }\n    }));\n    return items;\n  }\n\n  /**\n   * Redirect to the index page using the given sort parameter.\n   *\n   * @param {String} sort\n   */\n  changeParams(sort) {\n    const params = this.params();\n    if (sort === app.forum.attribute('userDirectoryDefaultSort')) {\n      delete params.sort;\n    } else {\n      params.sort = sort;\n    }\n    let moreQ = '';\n    for (const filter in this.enabledSpecialGroupFilters) {\n      moreQ += this.enabledSpecialGroupFilters[filter] + ' ';\n    }\n    if (this.enabledGroupFilters.length > 0) {\n      const groupsQ = this.enabledGroupFilters.reduce((prev, curr) => {\n        return `${prev}${prev ? ' ' : ''}group:${curr}`;\n      }, '');\n      params.qBuilder = {\n        groups: groupsQ\n      };\n    } else {\n      params.qBuilder = {\n        groups: '',\n        q: moreQ.trim()\n      };\n    }\n    this.state.refreshParams(params);\n    const routeParams = {\n      ...params\n    };\n    delete routeParams.qBuilder;\n    m.route.set(app.route('fof_user_directory', routeParams));\n  }\n  stickyParams() {\n    return {\n      sort: m.route.param('sort'),\n      q: m.route.param('q')\n    };\n  }\n  params() {\n    return this.stickyParams();\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/components/UserDirectoryPage', UserDirectoryPage);","import UserCard from 'flarum/forum/components/UserCard';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport humanTime from 'flarum/common/utils/humanTime';\nimport Icon from 'flarum/common/components/Icon';\nimport app from 'flarum/forum/app';\nexport default class UserDirectoryUserCard extends UserCard {\n  /**\n   * Allowing to add additonal items unique to the user directory.\n   *\n   * @return {ItemList<import('mithril').Children>}\n   */\n  infoItems() {\n    const items = super.infoItems();\n    const user = this.attrs.user;\n    if (items.has('lastSeen')) items.setPriority('lastSeen', 100);\n    if (items.has('joined')) items.setPriority('joined', 95);\n    if (items.has('points')) items.setPriority('points', 60);\n    if (items.has('best-answer-count')) items.setPriority('best-answer-count', 68);\n    if (items.has('masquerade-bio')) items.setPriority('masquerade-bio', 50);\n    items.add('discussion-count', m(\"div\", {\n      className: \"userStat\"\n    }, m(Icon, {\n      name: \"fas fa-comment\"\n    }), app.translator.trans('fof-user-directory.forum.page.usercard.discussion-count', {\n      count: user.discussionCount()\n    })), 70);\n    items.add('comment-count', m(\"div\", {\n      className: \"userStat\"\n    }, m(Icon, {\n      name: \"fas fa-comments\"\n    }), app.translator.trans('fof-user-directory.forum.page.usercard.post-count', {\n      count: user.commentCount()\n    })), 69);\n    return items;\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/components/UserDirectoryUserCard', UserDirectoryUserCard);","import CheckableButton from './CheckableButton';\nimport SearchField from './SearchField';\nimport SmallUserCard from './SmallUserCard';\nimport UserDirectoryList from './UserDirectoryList';\nimport UserDirectoryListItem from './UserDirectoryListItem';\nimport UserDirectoryPage from './UserDirectoryPage';\nimport UserDirectoryUserCard from './UserDirectoryUserCard';\nexport const components = {\n  CheckableButton,\n  SearchField,\n  SmallUserCard,\n  UserDirectoryList,\n  UserDirectoryListItem,\n  UserDirectoryPage,\n  UserDirectoryUserCard\n};\nflarum.reg.add('fof-user-directory', 'forum/components', null);","import Extend from 'flarum/common/extenders';\nimport UserDirectoryPage from './components/UserDirectoryPage';\nimport Text from './models/Text';\nexport default [new Extend.Routes() //\n.add('fof_user_directory', '/users', UserDirectoryPage), new Extend.Store() //\n.add('fof-user-directory-text', Text)];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nexport const linkGroupMentions = function () {\n  if (app.forum.attribute('canSeeUserDirectoryLink') && app.forum.attribute('userDirectoryLinkGroupMentions')) {\n    // @ts-ignore\n    this.$('.GroupMention').each(function () {\n      // @ts-ignore\n      if ($(this).hasClass('GroupMention--linked')) return;\n\n      // @ts-ignore\n      const name = $(this).find('.GroupMention-name').text();\n      const group = app.store.getBy('groups', 'namePlural', name.slice(1));\n      if (group) {\n        const link = $(`<a class=\"GroupMention-link\" href=\"${app.route('fof_user_directory', {\n          q: `group:${group.id()}`\n        })}\"></a>`);\n        link.on('click', function (e) {\n          // @ts-ignore\n          m.route.set(this.getAttribute('href'));\n          e.preventDefault();\n        });\n\n        // @ts-ignore\n        $(this).addClass('GroupMention--linked').wrap(link);\n      }\n    });\n  }\n};\nexport default function extendCommentPost() {\n  extend(CommentPost.prototype, 'oncreate', linkGroupMentions);\n  extend(CommentPost.prototype, 'onupdate', linkGroupMentions);\n}\nflarum.reg.add('fof-user-directory', 'forum/extenders/extendCommentPost', extendCommentPost);","import IndexSidebar from 'flarum/forum/components/IndexSidebar';\nimport app from 'flarum/forum/app';\nimport { extend, override } from 'flarum/common/extend';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserDirectoryHero from '../components/UserDirectoryHero';\nexport default function extendIndexPage() {\n  extend(IndexSidebar.prototype, 'navItems', items => {\n    if (app.forum.attribute('canSeeUserDirectoryLink') && app.forum.attribute('canSearchUsers')) {\n      items.add('fof-user-directory', m(LinkButton, {\n        href: app.route('fof_user_directory'),\n        icon: \"far fa-address-book\"\n      }, app.translator.trans('fof-user-directory.forum.page.nav')), 85);\n    }\n  });\n  override(IndexPage.prototype, 'hero', function (original) {\n    if (app.current.get('routeName') === 'fof_user_directory') {\n      return m(UserDirectoryHero, null);\n    }\n    return original();\n  });\n}\nflarum.reg.add('fof-user-directory', 'forum/extenders/extendIndexPage', extendIndexPage);","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UsersSearchSource from 'flarum/forum/components/UsersSearchSource';\nimport LinkButton from 'flarum/common/components/LinkButton';\nexport default function extendUsersSearchSource() {\n  extend(UsersSearchSource.prototype, 'view', function (view, query) {\n    if (!view || !app.forum.attribute('canSeeUserDirectoryLink') || app.forum.attribute('userDirectoryDisableGlobalSearchSource')) {\n      return;\n    }\n    query = query.toLowerCase();\n    view.splice(1, 0, m(\"li\", null, m(LinkButton, {\n      className: \"Button Button--link\",\n      href: app.route('fof_user_directory', {\n        q: query\n      }),\n      icon: \"fas fa-search\"\n    }, app.translator.trans('fof-user-directory.forum.search.users_heading', {\n      query\n    }))));\n  });\n}\nflarum.reg.add('fof-user-directory', 'forum/extenders/extendUsersSearchSource', extendUsersSearchSource);","import app from 'flarum/forum/app';\nimport UserDirectoryPage from './components/UserDirectoryPage';\nimport UserDirectoryList from './components/UserDirectoryList';\nimport UserDirectoryListItem from './components/UserDirectoryListItem';\nimport UserDirectoryState from './states/UserDirectoryState';\nimport SortMap from '../common/utils/SortMap';\nimport CheckableButton from './components/CheckableButton';\nimport extendCommentPost from './extenders/extendCommentPost';\nimport extendUsersSearchSource from './extenders/extendUsersSearchSource';\nimport extendIndexPage from './extenders/extendIndexPage';\nexport { default as extend } from './extend';\n\n// Allow other extensions to extend the page.\n// Removing this and using the usual export ./components will break integrations using these, so they must stay for now.\n// TODO: Remove in Flarum 2.0\nexport { UserDirectoryPage, UserDirectoryList, UserDirectoryListItem, UserDirectoryState, SortMap, CheckableButton };\napp.initializers.add('fof-user-directory', function () {\n  extendCommentPost();\n  extendUsersSearchSource();\n  extendIndexPage();\n});\nexport * from './components';\nexport * from './searchTypes';","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Model from 'flarum/common/Model';\n\n/**\n * Special model used only client-side to hold a free text search value in the search field\n */\nexport default class Text extends Model {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"text\", Model.attribute('text'));\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/models/Text', Text);","/**\n * @abstract\n */\nexport default class AbstractType {\n  constructor() {\n    this.suggestions = [];\n    this.loading = false;\n  }\n\n  /**\n   * The `type` property of the Models used in suggestions and applied filters for this type\n   * @return {String}\n   */\n  resourceType() {\n    //\n  }\n\n  /**\n   * Executed when the search query changes\n   * The method should update this.suggestions with the new results\n   * If asynchronous loading is used, this.loading should be set to true during the process\n   * @param {String} query\n   */\n  search(query) {\n    //\n  }\n\n  /**\n   * Renders the \"kind\" label next to the value indicating what kind of information that result is\n   * Should probably just be a translated text\n   * @param {Model} resource\n   * @return {vnode}\n   */\n  renderKind(resource) {\n    //\n  }\n\n  /**\n   * Renders the Label containing the suggestion's value\n   * Should be a vdom template using the .UserDirectorySearchLabel class or similar\n   * @param {Model} resource\n   * @return {vnode}\n   */\n  renderLabel(resource) {\n    //\n  }\n\n  /**\n   * Applies a filter on a params object to use in the page request\n   * @param {Object} params Object. Might or might not contain a `q` property or `sort` property. In the future, `filters` object might be supported\n   * @param {Model} resource\n   */\n  applyFilter(params, resource) {\n    //\n  }\n\n  /**\n   * Used to populate the search field on page load with values from the querystring\n   * A promise must be returned, and the UI will auto-update once the promise returns\n   * @param {Object} params Object with a `q` and `sort` property. `filters` might be supported in the future\n   * @return {Promise<Model[]>}\n   */\n  initializeFromParams(params) {\n    //\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/searchTypes/AbstractType', AbstractType);","import app from 'flarum/forum/app';\nimport Group from 'flarum/common/models/Group';\nimport Icon from 'flarum/common/components/Icon';\nimport AbstractType from './AbstractType';\n\n/* global m */\n\nexport default class GroupFilter extends AbstractType {\n  resourceType() {\n    return 'groups';\n  }\n  search(query) {\n    this.suggestions = [];\n    if (!query) {\n      return;\n    }\n    query = query.toLowerCase();\n    app.store.all('groups').forEach(group => {\n      // Do not allow Guest group as it wouldn't do anything\n      if (group.id() === Group.GUEST_ID) {\n        return;\n      }\n      if (group.nameSingular().toLowerCase().indexOf(query) !== -1 || group.namePlural().toLowerCase().indexOf(query) !== -1) {\n        this.suggestions.push(group);\n      }\n    });\n  }\n  renderKind() {\n    return app.translator.trans('fof-user-directory.forum.search.kinds.group');\n  }\n  renderLabel(group) {\n    return m('.UserDirectorySearchLabel', group.color() ? {\n      className: 'colored',\n      style: {\n        backgroundColor: group.color()\n      }\n    } : {}, [group.icon() ? [Icon.component({\n      name: group.icon()\n    }), ' '] : null, group.namePlural()]);\n  }\n  applyFilter(params, group) {\n    params.q = params.q ? params.q + ' ' : '';\n    params.q += 'group:' + group.id();\n  }\n  initializeFromParams(params) {\n    if (!params.q) {\n      return Promise.resolve([]);\n    }\n    const qWithSpacesAround = ' ' + params.q + ' ';\n    const groups = [];\n    const queryGroups = qWithSpacesAround.split(' ').filter(q => q.startsWith('group:'));\n    app.store.all('groups').forEach(group => {\n      queryGroups.forEach(queryGroup => {\n        const groupIds = queryGroup.replace('group:', '').split(',');\n        if (groupIds.includes(group.id())) {\n          groups.push(group);\n        }\n      });\n    });\n    return Promise.resolve(groups);\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/searchTypes/GroupFilter', GroupFilter);","import app from 'flarum/forum/app';\nimport AbstractType from './AbstractType';\n\n/* global m */\n\nexport default class TextFilter extends AbstractType {\n  resourceType() {\n    return 'fof-user-directory-text';\n  }\n  search(query) {\n    if (!query) {\n      this.suggestions = [];\n      return;\n    }\n    this.suggestions = [app.store.createRecord('fof-user-directory-text', {\n      attributes: {\n        text: query\n      }\n    })];\n  }\n  renderKind() {\n    return app.translator.trans('fof-user-directory.forum.search.kinds.text');\n  }\n  renderLabel(resource) {\n    return m('.UserDirectorySearchLabel', resource.text());\n  }\n  applyFilter(params, resource) {\n    params.q = params.q ? params.q + ' ' : '';\n    params.q += resource.text();\n  }\n  initializeFromParams(params) {\n    if (!params.q) {\n      return Promise.resolve([]);\n    }\n    return Promise.resolve(params.q.split(' ')\n    // Words with : are gambits and we will ignore them\n    .filter(word => word.indexOf(':') === -1).map(word => app.store.createRecord('fof-user-directory-text', {\n      attributes: {\n        text: word\n      }\n    })));\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/searchTypes/TextFilter', TextFilter);","import AbstractType from './AbstractType';\nimport GroupFilter from './GroupFilter';\nimport TextFilter from './TextFilter';\nexport const searchTypes = {\n  AbstractType,\n  GroupFilter,\n  TextFilter\n};\nflarum.reg.add('fof-user-directory', 'forum/searchTypes', null);","/**\n * Based on Flarum's DiscussionListState\n */\nimport SortMap from '../../common/utils/SortMap';\nexport default class UserDirectoryState {\n  constructor(params, app) {\n    if (params === void 0) {\n      params = {};\n    }\n    if (app === void 0) {\n      app = window.app;\n    }\n    this.params = params;\n    this.app = app;\n    this.users = [];\n    this.moreResults = false;\n    this.loading = false;\n    this.qBuilder = {};\n  }\n  requestParams() {\n    const params = {\n      include: [],\n      filter: {}\n    };\n    const sortKey = this.params.sort || app.forum.attribute('userDirectoryDefaultSort');\n\n    // sort might be set to null if no sort params has been passed\n    params.sort = this.sortMap()[sortKey];\n    if (this.params.q) {\n      params.filter.q = this.params.q;\n    }\n    return params;\n  }\n  sortMap() {\n    return {\n      default: '',\n      ...new SortMap().sortMap()\n    };\n  }\n  getParams() {\n    return this.params;\n  }\n  clear() {\n    this.users = [];\n    m.redraw();\n  }\n  refreshParams(newParams) {\n    if (!this.hasUsers() || Object.keys(newParams).some(key => this.getParams()[key] !== newParams[key])) {\n      const q = '';\n      this.params = newParams;\n      if (newParams.qBuilder) {\n        Object.assign(this.qBuilder, newParams.qBuilder || {});\n        this.params.q = Object.values(this.qBuilder).join(' ').trim();\n      }\n      if (!this.params.q && q) {\n        this.params.q = q;\n      }\n      this.refresh();\n    }\n  }\n  refresh() {\n    this.loading = true;\n    this.clear();\n    return this.loadResults().then(results => {\n      this.users = [];\n      this.parseResults(results);\n    }, () => {\n      this.loading = false;\n      m.redraw();\n    });\n  }\n  loadResults(offset) {\n    const preloadedUsers = this.app.preloadedApiDocument();\n    if (preloadedUsers) {\n      return Promise.resolve(preloadedUsers);\n    }\n    const params = this.requestParams();\n    params.page = {\n      offset\n    };\n    params.include = params.include.join(',');\n    return this.app.store.find('users', params);\n  }\n  loadMore() {\n    this.loading = true;\n    this.loadResults(this.users.length).then(this.parseResults.bind(this));\n  }\n  parseResults(results) {\n    this.users.push(...results);\n    this.loading = false;\n    this.moreResults = !!results.payload.links && !!results.payload.links.next;\n    m.redraw();\n    return results;\n  }\n  hasUsers() {\n    return this.users.length > 0;\n  }\n  isLoading() {\n    return this.loading;\n  }\n  isSearchResults() {\n    return !!this.params.q;\n  }\n  empty() {\n    return !this.hasUsers() && !this.isLoading();\n  }\n}\nflarum.reg.add('fof-user-directory', 'forum/states/UserDirectoryState', UserDirectoryState);","module.exports = flarum.reg.get('core', 'common/Component');","module.exports = flarum.reg.get('core', 'common/Model');","module.exports = flarum.reg.get('core', 'common/components/Button');","module.exports = flarum.reg.get('core', 'common/components/Dropdown');","module.exports = flarum.reg.get('core', 'common/components/Icon');","module.exports = flarum.reg.get('core', 'common/components/LinkButton');","module.exports = flarum.reg.get('core', 'common/components/LoadingIndicator');","module.exports = flarum.reg.get('core', 'common/components/Page');","module.exports = flarum.reg.get('core', 'common/components/Placeholder');","module.exports = flarum.reg.get('core', 'common/components/Select');","module.exports = flarum.reg.get('core', 'common/components/SelectDropdown');","module.exports = flarum.reg.get('core', 'common/components/Separator');","module.exports = flarum.reg.get('core', 'common/extend');","module.exports = flarum.reg.get('core', 'common/extenders');","module.exports = flarum.reg.get('core', 'common/helpers/listItems');","module.exports = flarum.reg.get('core', 'common/helpers/textContrastClass');","module.exports = flarum.reg.get('core', 'common/models/Group');","module.exports = flarum.reg.get('core', 'common/utils/ItemList');","module.exports = flarum.reg.get('core', 'common/utils/KeyboardNavigatable');","module.exports = flarum.reg.get('core', 'common/utils/classList');","module.exports = flarum.reg.get('core', 'common/utils/extractText');","module.exports = flarum.reg.get('core', 'common/utils/humanTime');","module.exports = flarum.reg.get('core', 'common/utils/withAttr');","module.exports = flarum.reg.get('core', 'forum/app');","module.exports = flarum.reg.get('core', 'forum/components/CommentPost');","module.exports = flarum.reg.get('core', 'forum/components/IndexPage');","module.exports = flarum.reg.get('core', 'forum/components/IndexSidebar');","module.exports = flarum.reg.get('core', 'forum/components/PageStructure');","module.exports = flarum.reg.get('core', 'forum/components/UserCard');","module.exports = flarum.reg.get('core', 'forum/components/UsersSearchSource');","module.exports = flarum.reg.get('core', 'utils/ItemList');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\tflarum.reg._webpack_runtimes[\"fof-user-directory\"] ||= __webpack_require__;// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/forum';\n"],"names":["toPropertyKey","_defineProperty","e","r","t","Object","defineProperty","value","enumerable","configurable","writable","default","_typeof","toPrimitive","Symbol","i","call","TypeError","String","Number","o","iterator","constructor","prototype"],"sourceRoot":""}
{"version":3,"sources":["webpack://@fof/user-directory/webpack/bootstrap","webpack://@fof/user-directory/external \"flarum.core.compat['forum/app']\"","webpack://@fof/user-directory/./src/common/utils/SortMap.js","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/Component']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/user-directory/external \"flarum.core.compat['forum/components/UserCard']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@fof/user-directory/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/extend']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/Model']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/UsersSearchSource']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/IndexPage']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Page']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Select']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/SelectDropdown']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Placeholder']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/utils/humanTime']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/utils/withAttr']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/utils/KeyboardNavigatable']\"","webpack://@fof/user-directory/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/models/Group']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Separator']\"","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/user-directory/./src/forum/components/SmallUserCard.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryListItem.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryList.js","webpack://@fof/user-directory/./src/forum/states/UserDirectoryState.js","webpack://@fof/user-directory/./src/forum/components/CheckableButton.js","webpack://@fof/user-directory/./src/forum/searchTypes/AbstractType.js","webpack://@fof/user-directory/./src/forum/searchTypes/TextFilter.js","webpack://@fof/user-directory/./src/forum/searchTypes/GroupFilter.js","webpack://@fof/user-directory/./src/forum/components/SearchField.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryPage.js","webpack://@fof/user-directory/./src/forum/models/Text.ts","webpack://@fof/user-directory/./src/forum/components/index.js","webpack://@fof/user-directory/./src/forum/searchTypes/index.js","webpack://@fof/user-directory/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","SortMap","sortMap","username_az","username_za","newest","oldest","most_discussions","least_discussions","_extends","assign","target","arguments","length","source","apply","this","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","SmallUserCard","infoItems","items","ItemList","user","attrs","add","app","translator","trans","ago","humanTime","joinTime","UserCard","UserDirectoryListItem","view","vnode","useSmallCards","attributes","className","controlsButtonClassName","component","Component","UserDirectoryList","loading","state","params","getParams","forum","attribute","isLoading","LoadingIndicator","moreResults","Button","onclick","loadMore","empty","text","Placeholder","isSearchResults","users","map","id","data-id","UserDirectoryState","window","qBuilder","requestParams","include","filter","sortKey","sort","q","default","clear","redraw","refreshParams","newParams","hasUsers","keys","some","values","join","trim","refresh","loadResults","then","results","parseResults","offset","preloadedUsers","preloadedApiDocument","Promise","resolve","page","store","find","push","payload","links","next","CheckableButton","getButtonContent","children","prev","checked","icon","AbstractType","suggestions","resourceType","search","query","renderKind","resource","renderLabel","applyFilter","initializeFromParams","TextFilter","createRecord","split","word","indexOf","GroupFilter","toLowerCase","all","forEach","group","Group","GUEST_ID","nameSingular","namePlural","color","style","backgroundColor","qWithSpacesAround","groups","SearchField","oninit","searchIndex","navigator","KeyboardNavigatable","when","event","onUp","onDown","allSuggestions","onSelect","selectResult","applyFiltering","onRemove","appliedFilters","pop","availableFilters","filterTypes","toArray","focused","route","param","resources","recipient","index","splice","title","searchResultKind","recipientLabel","placeholder","oninput","withAttr","performNewSearch","onkeydown","navigate","onfocus","onblur","result","type","filterForResource","f","data","clearSuggestions","concat","console","warn","set","UserDirectoryPage","bodyClass","idSegments","Array","from","matchAll","match","enabledGroupFilters","enabledSpecialGroupFilters","initializers","has","includes","history","IndexPage","hero","listItems","sidebarItems","viewItems","actionItems","replace","SelectDropdown","buttonClassName","navItems","stickyParams","LinkButton","href","sortOptions","Select","options","onchange","changeParams","Dropdown","caretIcon","label","groupItems","e","Separator","session","moreQ","groupsQ","reduce","curr","routeParams","Page","Text","Model","components","searchTypes","routes","fof_user_directory","path","models","extend","UsersSearchSource"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = flarum.core.compat['forum/app'];","/**\n * The sort options.\n * We use a class and not just a POJO/function because we want extensions to be able to extend it\n */\nexport default class SortMap {\n    sortMap() {\n        return {\n            username_az: 'username',\n            username_za: '-username',\n            newest: '-joinedAt',\n            oldest: 'joinedAt',\n            most_discussions: '-discussionCount',\n            least_discussions: 'discussionCount',\n        };\n    }\n}\n","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['forum/components/UserCard'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/components/UsersSearchSource'];","module.exports = flarum.core.compat['common/components/IndexPage'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['common/components/SelectDropdown'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/components/Placeholder'];","module.exports = flarum.core.compat['common/utils/humanTime'];","module.exports = flarum.core.compat['common/utils/withAttr'];","module.exports = flarum.core.compat['common/utils/KeyboardNavigatable'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['common/models/Group'];","module.exports = flarum.core.compat['common/components/Separator'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import UserCard from 'flarum/forum/components/UserCard';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport humanTime from 'flarum/common/utils/humanTime';\n\nexport default class SmallUserCard extends UserCard {\n    //Overriding infoItems so that other extensions can separately add items to small cards\n    infoItems() {\n        const items = new ItemList();\n        const user = this.attrs.user;\n\n        items.add('joined', app.translator.trans('core.forum.user.joined_date_text', { ago: humanTime(user.joinTime()) }));\n\n        return items;\n    }\n}\n","import Component from 'flarum/common/Component';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport SmallUserCard from './SmallUserCard';\n\nexport default class UserDirectoryListItem extends Component {\n    view(vnode) {\n        const { user, useSmallCards } = this.attrs;\n\n        const attributes = {\n            user,\n            className: `UserCard--directory${useSmallCards ? ' UserCard--small' : ''}`,\n            controlsButtonClassName: 'Button Button--icon Button--flat',\n        };\n\n        return <div className=\"User\">{useSmallCards ? SmallUserCard.component(attributes) : UserCard.component(attributes)}</div>;\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport UserDirectoryListItem from './UserDirectoryListItem';\n\n/**\n * Based on Flarum's DiscussionList\n */\nexport default class UserDirectoryList extends Component {\n    view() {\n        const { state } = this.attrs;\n\n        const params = state.getParams();\n        const useSmallCards = app.forum.attribute('userDirectorySmallCards');\n        let loading;\n\n        if (state.isLoading()) {\n            loading = LoadingIndicator.component();\n        } else if (state.moreResults) {\n            loading = Button.component(\n                {\n                    className: 'Button',\n                    onclick: state.loadMore.bind(state),\n                },\n                app.translator.trans('fof-user-directory.forum.page.load_more_button')\n            );\n        }\n\n        if (state.empty()) {\n            const text = app.translator.trans('fof-user-directory.forum.page.empty_text');\n            return <div className=\"DiscussionList\">{Placeholder.component({ text })}</div>;\n        }\n\n        return (\n            <div\n                className={\n                    'UserDirectoryList' +\n                    (state.isSearchResults() ? ' UserDirectoryList--searchResults' : '') +\n                    (useSmallCards ? ' UserDirectoryList--small-cards' : '')\n                }\n            >\n                <ul className=\"UserDirectoryList-users\">\n                    {state.users.map((user) => {\n                        return (\n                            <li key={user.id()} data-id={user.id()}>\n                                {UserDirectoryListItem.component({ user, params, useSmallCards })}\n                            </li>\n                        );\n                    })}\n                </ul>\n                <div className=\"UserDirectoryList-loadMore\">{loading}</div>\n            </div>\n        );\n    }\n}\n","/**\n * Based on Flarum's DiscussionListState\n */\nimport SortMap from '../../common/utils/SortMap';\n\nexport default class UserDirectoryState {\n    constructor(params = {}, app = window.app) {\n        this.params = params;\n\n        this.app = app;\n\n        this.users = [];\n\n        this.moreResults = false;\n\n        this.loading = false;\n\n        this.qBuilder = {};\n    }\n\n    requestParams() {\n        const params = { include: [], filter: {} };\n\n        const sortKey = this.params.sort || app.forum.attribute('userDirectoryDefaultSort');\n\n        // sort might be set to null if no sort params has been passed\n        params.sort = this.sortMap()[sortKey];\n\n        if (this.params.q) {\n            params.filter.q = this.params.q;\n        }\n\n        return params;\n    }\n\n    sortMap() {\n        return {\n            default: '',\n            ...new SortMap().sortMap(),\n        };\n    }\n\n    getParams() {\n        return this.params;\n    }\n\n    clear() {\n        this.users = [];\n        m.redraw();\n    }\n\n    refreshParams(newParams) {\n        if (!this.hasUsers() || Object.keys(newParams).some((key) => this.getParams()[key] !== newParams[key])) {\n            const q = '';\n            this.params = newParams;\n\n            if (newParams.qBuilder) {\n                Object.assign(this.qBuilder, newParams.qBuilder || {});\n                this.params.q = Object.values(this.qBuilder).join(' ').trim();\n            }\n\n            if (!this.params.q && q) {\n                this.params.q = q;\n            }\n\n            this.refresh();\n        }\n    }\n\n    refresh() {\n        this.loading = true;\n\n        this.clear();\n\n        return this.loadResults().then(\n            (results) => {\n                this.users = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n            }\n        );\n    }\n\n    loadResults(offset) {\n        const preloadedUsers = this.app.preloadedApiDocument();\n\n        if (preloadedUsers) {\n            return Promise.resolve(preloadedUsers);\n        }\n\n        const params = this.requestParams();\n        params.page = { offset };\n        params.include = params.include.join(',');\n\n        return this.app.store.find('users', params);\n    }\n\n    loadMore() {\n        this.loading = true;\n\n        this.loadResults(this.users.length).then(this.parseResults.bind(this));\n    }\n\n    parseResults(results) {\n        this.users.push(...results);\n\n        this.loading = false;\n        this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n        m.redraw();\n\n        return results;\n    }\n\n    hasUsers() {\n        return this.users.length > 0;\n    }\n\n    isLoading() {\n        return this.loading;\n    }\n\n    isSearchResults() {\n        return !!this.params.q;\n    }\n\n    empty() {\n        return !this.hasUsers() && !this.isLoading();\n    }\n}\n","import Button from 'flarum/common/components/Button';\nimport icon from 'flarum/common/helpers/icon';\n\nexport default class CheckableButton extends Button {\n    /**\n     * Get the template for the button's content.\n     *\n     * @return {*}\n     * @protected\n     */\n    getButtonContent(children) {\n        const prev = super.getButtonContent(children);\n\n        if (this.attrs.checked) prev.push(icon('fas fa-check', { className: 'Button-icon ButtonCheck' }));\n\n        return prev;\n    }\n}\n","/**\n * @abstract\n */\nexport default class AbstractType {\n    constructor() {\n        this.suggestions = [];\n        this.loading = false;\n    }\n\n    /**\n     * The `type` property of the Models used in suggestions and applied filters for this type\n     * @return {String}\n     */\n    resourceType() {\n        //\n    }\n\n    /**\n     * Executed when the search query changes\n     * The method should update this.suggestions with the new results\n     * If asynchronous loading is used, this.loading should be set to true during the process\n     * @param {String} query\n     */\n    search(query) {\n        //\n    }\n\n    /**\n     * Renders the \"kind\" label next to the value indicating what kind of information that result is\n     * Should probably just be a translated text\n     * @param {Model} resource\n     * @return {vnode}\n     */\n    renderKind(resource) {\n        //\n    }\n\n    /**\n     * Renders the Label containing the suggestion's value\n     * Should be a vdom template using the .UserDirectorySearchLabel class or similar\n     * @param {Model} resource\n     * @return {vnode}\n     */\n    renderLabel(resource) {\n        //\n    }\n\n    /**\n     * Applies a filter on a params object to use in the page request\n     * @param {Object} params Object. Might or might not contain a `q` property or `sort` property. In the future, `filters` object might be supported\n     * @param {Model} resource\n     */\n    applyFilter(params, resource) {\n        //\n    }\n\n    /**\n     * Used to populate the search field on page load with values from the querystring\n     * A promise must be returned, and the UI will auto-update once the promise returns\n     * @param {Object} params Object with a `q` and `sort` property. `filters` might be supported in the future\n     * @return {Promise<Model[]>}\n     */\n    initializeFromParams(params) {\n        //\n    }\n}\n","import app from 'flarum/forum/app';\nimport AbstractType from './AbstractType';\n\n/* global m */\n\nexport default class TextFilter extends AbstractType {\n    resourceType() {\n        return 'fof-user-directory-text';\n    }\n\n    search(query) {\n        if (!query) {\n            this.suggestions = [];\n            return;\n        }\n\n        this.suggestions = [\n            app.store.createRecord('fof-user-directory-text', {\n                attributes: {\n                    text: query,\n                },\n            }),\n        ];\n    }\n\n    renderKind() {\n        return app.translator.trans('fof-user-directory.forum.search.kinds.text');\n    }\n\n    renderLabel(resource) {\n        return m('.UserDirectorySearchLabel', resource.text());\n    }\n\n    applyFilter(params, resource) {\n        params.q = params.q ? params.q + ' ' : '';\n        params.q += resource.text();\n    }\n\n    initializeFromParams(params) {\n        if (!params.q) {\n            return Promise.resolve([]);\n        }\n\n        return Promise.resolve(\n            params.q\n                .split(' ')\n                // Words with : are gambits and we will ignore them\n                .filter((word) => word.indexOf(':') === -1)\n                .map((word) =>\n                    app.store.createRecord('fof-user-directory-text', {\n                        attributes: {\n                            text: word,\n                        },\n                    })\n                )\n        );\n    }\n}\n","import app from 'flarum/forum/app';\nimport Group from 'flarum/common/models/Group';\nimport icon from 'flarum/common/helpers/icon';\nimport AbstractType from './AbstractType';\n\n/* global m */\n\nexport default class GroupFilter extends AbstractType {\n    resourceType() {\n        return 'groups';\n    }\n\n    search(query) {\n        this.suggestions = [];\n\n        if (!query) {\n            return;\n        }\n\n        query = query.toLowerCase();\n\n        app.store.all('groups').forEach((group) => {\n            // Do not allow Guest group as it wouldn't do anything\n            if (group.id() === Group.GUEST_ID) {\n                return;\n            }\n\n            if (group.nameSingular().toLowerCase().indexOf(query) !== -1 || group.namePlural().toLowerCase().indexOf(query) !== -1) {\n                this.suggestions.push(group);\n            }\n        });\n    }\n\n    renderKind() {\n        return app.translator.trans('fof-user-directory.forum.search.kinds.group');\n    }\n\n    renderLabel(group) {\n        return m(\n            '.UserDirectorySearchLabel',\n            group.color()\n                ? {\n                      className: 'colored',\n                      style: {\n                          backgroundColor: group.color(),\n                      },\n                  }\n                : {},\n            [group.icon() ? [icon(group.icon()), ' '] : null, group.namePlural()]\n        );\n    }\n\n    applyFilter(params, group) {\n        params.q = params.q ? params.q + ' ' : '';\n        params.q += 'group:' + group.id();\n    }\n\n    initializeFromParams(params) {\n        if (!params.q) {\n            return Promise.resolve([]);\n        }\n\n        const qWithSpacesAround = ' ' + params.q + ' ';\n\n        const groups = [];\n\n        app.store.all('groups').forEach((group) => {\n            if (qWithSpacesAround.indexOf('group:' + group.id()) !== -1) {\n                groups.push(group);\n            }\n        });\n\n        return Promise.resolve(groups);\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport KeyboardNavigatable from 'flarum/common/utils/KeyboardNavigatable';\nimport ItemList from 'flarum/utils/ItemList';\nimport TextFilter from '../searchTypes/TextFilter';\nimport GroupFilter from '../searchTypes/GroupFilter';\n\nexport default class SearchField extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.searchIndex = 0;\n        this.navigator = new KeyboardNavigatable();\n        this.navigator\n            .when((event) => {\n                // Do not handle keyboard when TAB is pressed and there's nothing in field\n                // Without this it's impossible to TAB out of the field\n                return event.key !== 'Tab' || !!this.filter;\n            })\n            .onUp(() => {\n                if (this.searchIndex > 0) {\n                    this.searchIndex--;\n                    m.redraw();\n                }\n            })\n            .onDown(() => {\n                if (this.searchIndex < this.allSuggestions().length - 1) {\n                    this.searchIndex++;\n                    m.redraw();\n                }\n            })\n            .onSelect(() => {\n                if (this.filter) {\n                    this.selectResult(this.allSuggestions()[this.searchIndex]);\n                    m.redraw();\n                } else {\n                    this.applyFiltering();\n                }\n            })\n            .onRemove(() => {\n                this.appliedFilters.pop();\n            });\n\n        this.availableFilters = this.filterTypes().toArray();\n        this.appliedFilters = [];\n\n        this.filter = '';\n        this.focused = false;\n\n        // When the page loads, initialize UI with filters from the parameters\n        this.availableFilters.forEach((filter) => {\n            filter\n                .initializeFromParams({\n                    sort: m.route.param('sort'),\n                    q: m.route.param('q'),\n                })\n                .then((resources) => {\n                    this.appliedFilters.push(...resources);\n                    m.redraw();\n                });\n        });\n    }\n\n    view() {\n        const suggestions = this.allSuggestions();\n\n        const loading = this.availableFilters.some((filter) => filter.loading);\n\n        return (\n            <div className=\"Form-group Usersearchbox\">\n                <div className={`UserDirectorySearchInput FormControl ${this.focused ? 'focus' : ''}`}>\n                    <span className=\"UserDirectorySearchInput-selected\">\n                        {this.appliedFilters.map((recipient, index) => (\n                            <span\n                                className=\"UserDirectorySearchInput-filter\"\n                                onclick={() => {\n                                    this.appliedFilters.splice(index, 1);\n                                    this.applyFiltering();\n                                }}\n                                title={this.searchResultKind(recipient)}\n                            >\n                                {this.recipientLabel(recipient)}\n                            </span>\n                        ))}\n                    </span>\n                    <input\n                        className=\"FormControl\"\n                        placeholder={app.translator.trans('fof-user-directory.forum.search.field.placeholder')}\n                        value={this.filter}\n                        oninput={withAttr('value', (value) => {\n                            this.filter = value;\n                            this.performNewSearch();\n                        })}\n                        onkeydown={this.navigator.navigate.bind(this.navigator)}\n                        onfocus={() => {\n                            this.focused = true;\n                        }}\n                        onblur={() => {\n                            this.focused = false;\n                        }}\n                    />\n                    {loading && <LoadingIndicator />}\n                    {!!suggestions.length && (\n                        <ul className=\"Dropdown-menu\">\n                            {suggestions.map((result, index) => (\n                                <li\n                                    className={this.searchIndex === index ? 'active' : ''}\n                                    onclick={() => {\n                                        this.selectResult(result);\n                                        this.applyFiltering();\n                                    }}\n                                >\n                                    <button type=\"button\">\n                                        <span className=\"UserDirectorySearchKind\">{this.searchResultKind(result)}</span>\n                                        {this.recipientLabel(result)}\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    filterTypes() {\n        const items = new ItemList();\n\n        items.add('text', new TextFilter(), 10);\n        items.add('group', new GroupFilter(), 20);\n\n        return items;\n    }\n\n    filterForResource(resource) {\n        return this.availableFilters.find((f) => f.resourceType() === resource.data.type);\n    }\n\n    recipientLabel(resource) {\n        const filter = this.filterForResource(resource);\n\n        if (filter) {\n            return filter.renderLabel(resource);\n        }\n\n        return '[unknown]';\n    }\n\n    searchResultKind(resource) {\n        const filter = this.filterForResource(resource);\n\n        if (filter) {\n            return filter.renderKind(resource);\n        }\n\n        return '[unknown]';\n    }\n\n    selectResult(result) {\n        if (!result) {\n            return;\n        }\n\n        this.appliedFilters.push(result);\n        this.clearSuggestions();\n    }\n\n    clearSuggestions() {\n        this.filter = '';\n        this.availableFilters.forEach((filter) => {\n            filter.search('');\n        });\n    }\n\n    allSuggestions() {\n        return [].concat(...this.availableFilters.map((filter) => filter.suggestions));\n    }\n\n    performNewSearch() {\n        this.searchIndex = 0;\n\n        this.availableFilters.forEach((filter) => {\n            filter.search(this.filter);\n        });\n\n        this.attrs.state.refreshParams({ ...this.attrs.state.getParams(), qBuilder: this.qBuilder() });\n    }\n\n    qBuilder(params = {}) {\n        this.appliedFilters.forEach((resource) => {\n            const filter = this.filterForResource(resource);\n\n            if (filter) {\n                filter.applyFilter(params, resource);\n            } else {\n                console.warn('Cannot find filter class for resource', resource);\n            }\n        });\n        return { filter: `${this.filter} ${params.q || ''}` };\n    }\n\n    applyFiltering() {\n        const params = {\n            sort: m.route.param('sort'),\n        };\n\n        this.qBuilder(params);\n\n        m.route.set(app.route('fof_user_directory', params));\n    }\n}\n","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Select from 'flarum/common/components/Select';\nimport Button from 'flarum/common/components/Button';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport SelectDropdown from 'flarum/common/components/SelectDropdown';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport UserDirectoryList from './UserDirectoryList';\nimport UserDirectoryState from '../states/UserDirectoryState';\nimport CheckableButton from './CheckableButton';\nimport SearchField from './SearchField';\nimport Separator from 'flarum/common/components/Separator';\n\n/**\n * This page re-uses Flarum's IndexPage CSS classes\n */\nexport default class UserDirectoryPage extends Page {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.state = new UserDirectoryState({});\n        this.state.refreshParams(app.search.params());\n\n        this.bodyClass = 'User--directory';\n\n        let idSegments = [];\n        if (this.params().q) {\n            Array.from(this.params().q.matchAll(/group:([\\d,]+)/g)).forEach((match) => {\n                idSegments.push(match[1]);\n            });\n        }\n        this.enabledGroupFilters = idSegments\n            .join(',')\n            .split(',')\n            .filter((id) => id);\n\n        this.enabledSpecialGroupFilters = [];\n        if (app.initializers.has('flarum-suspend') && app.forum.attribute('hasSuspendPermission')) {\n            // If there is a special group filter int the params, enable it here\n            if (this.params()?.q?.includes('is:suspended')) {\n                this.enabledSpecialGroupFilters['flarum-suspend'] = 'is:suspended';\n            }\n        }\n\n        app.history.push('users', app.translator.trans('fof-user-directory.forum.header.back_to_user_directory_tooltip'));\n    }\n\n    view() {\n        return (\n            <div className=\"IndexPage\">\n                {IndexPage.prototype.hero()}\n                <div className=\"container\">\n                    <div className=\"sideNavContainer\">\n                        <nav className=\"IndexPage-nav sideNav\">\n                            <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                        </nav>\n                        <div className=\"IndexPage-results sideNavOffset\">\n                            <div className=\"IndexPage-toolbar\">\n                                <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\n                                <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\n                            </div>\n                            <UserDirectoryList state={this.state} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Our own sidebar. Re-uses Index.sidebarItems as the base\n     * Elements added here will only show up on the user directory page\n     *\n     * @return {ItemList}\n     */\n    sidebarItems() {\n        const items = IndexPage.prototype.sidebarItems();\n\n        items.replace(\n            'nav',\n            SelectDropdown.component(\n                {\n                    buttonClassName: 'Button',\n                    className: 'App-titleControl',\n                },\n                this.navItems().toArray()\n            )\n        );\n\n        return items;\n    }\n\n    /**\n     * Our own sidebar navigation. Re-uses Index.navItems as the base\n     * Elements added here will only show up on the user directory page\n     *\n     * @return {ItemList}\n     */\n    navItems() {\n        const items = IndexPage.prototype.navItems();\n        const params = this.stickyParams();\n\n        items.add(\n            'fof-user-directory',\n            LinkButton.component(\n                {\n                    href: app.route('fof_user_directory', params),\n                    icon: 'far fa-address-book',\n                },\n                app.translator.trans('fof-user-directory.forum.page.nav')\n            ),\n            85\n        );\n\n        return items;\n    }\n\n    viewItems() {\n        const items = new ItemList();\n        const sortMap = this.state.sortMap();\n\n        const sortOptions = {};\n        for (const i in sortMap) {\n            sortOptions[i] = app.translator.trans('fof-user-directory.lib.sort.' + i);\n        }\n\n        items.add(\n            'sort',\n            Select.component({\n                options: sortOptions,\n                value: this.state.getParams().sort || app.forum.attribute('userDirectoryDefaultSort'),\n                onchange: this.changeParams.bind(this),\n            })\n        );\n\n        items.add(\n            'filterGroups',\n            Dropdown.component(\n                {\n                    caretIcon: 'fas fa-filter',\n                    label: app.translator.trans('fof-user-directory.forum.page.filter_button'),\n                    buttonClassName: 'FormControl',\n                    className: 'GroupFilterDropdown',\n                },\n                this.groupItems().toArray()\n            )\n        );\n\n        items.add(\n            'search',\n            SearchField.component({\n                state: this.state,\n            })\n        );\n\n        return items;\n    }\n\n    groupItems() {\n        const items = new ItemList();\n\n        app.store\n            .all('groups')\n            .filter((group) => group.id() !== '2' && group.id() !== '3')\n            .forEach((group) => {\n                items.add(\n                    group.namePlural(),\n                    CheckableButton.component(\n                        {\n                            className: 'GroupFilterButton',\n                            icon: group.icon(),\n                            checked: this.enabledGroupFilters.includes(group.id()),\n                            onclick: () => {\n                                const id = group.id();\n                                if (this.enabledGroupFilters.includes(id)) {\n                                    this.enabledGroupFilters = this.enabledGroupFilters.filter((e) => e != id);\n                                } else {\n                                    this.enabledGroupFilters.push(id);\n                                    // Empty the special group filters\n                                    this.enabledSpecialGroupFilters = [];\n                                }\n\n                                this.changeParams(this.params().sort);\n                            },\n                        },\n                        group.namePlural()\n                    )\n                );\n            });\n\n        if (app.initializers.has('flarum-suspend') && app.forum.attribute('hasSuspendPermission')) {\n            items.add(\n                'suspend',\n                CheckableButton.component(\n                    {\n                        className: 'GroupFilterButton',\n                        icon: 'fas fa-ban',\n                        checked: this.enabledSpecialGroupFilters['flarum-suspend'] === 'is:suspended',\n                        onclick: () => {\n                            const id = 'flarum-suspend';\n                            if (this.enabledSpecialGroupFilters[id] === 'is:suspended') {\n                                this.enabledSpecialGroupFilters[id] = '';\n                            } else {\n                                this.enabledSpecialGroupFilters[id] = 'is:suspended';\n                                // Empty the group filters\n                                this.enabledGroupFilters = [];\n                            }\n\n                            this.changeParams(this.params().sort);\n                        },\n                    },\n                    app.translator.trans('flarum-suspend.forum.user_badge.suspended_tooltip')\n                ),\n                90\n            );\n\n            items.add('seperator', Separator.component(), 50);\n        }\n\n        return items;\n    }\n\n    actionItems() {\n        const items = new ItemList();\n\n        items.add(\n            'refresh',\n            Button.component({\n                title: app.translator.trans('fof-user-directory.forum.page.refresh_tooltip'),\n                icon: 'fas fa-sync',\n                className: 'Button Button--icon',\n                onclick: () => {\n                    this.state.refresh();\n                    if (app.session.user) {\n                        app.store.find('users', app.session.user.id());\n                        m.redraw();\n                    }\n                },\n            })\n        );\n\n        return items;\n    }\n\n    /**\n     * Redirect to the index page using the given sort parameter.\n     *\n     * @param {String} sort\n     */\n    changeParams(sort) {\n        const params = this.params();\n\n        if (sort === app.forum.attribute('userDirectoryDefaultSort')) {\n            delete params.sort;\n        } else {\n            params.sort = sort;\n        }\n\n        let moreQ = '';\n        for (const filter in this.enabledSpecialGroupFilters) {\n            moreQ += this.enabledSpecialGroupFilters[filter] + ' ';\n        }\n\n        if (this.enabledGroupFilters.length > 0) {\n            const groupsQ = this.enabledGroupFilters.reduce((prev, curr) => {\n                return `${prev}${prev ? ' ' : ''}group:${curr}`;\n            }, '');\n\n            params.qBuilder = { groups: groupsQ };\n        } else {\n            params.qBuilder = { groups: '', q: moreQ.trim() };\n        }\n\n        this.state.refreshParams(params);\n\n        const routeParams = { ...params };\n        delete routeParams.qBuilder;\n\n        m.route.set(app.route('fof_user_directory', routeParams));\n    }\n\n    stickyParams() {\n        return {\n            sort: m.route.param('sort'),\n            q: m.route.param('q'),\n        };\n    }\n\n    params() {\n        return this.stickyParams();\n    }\n}\n","import Model from 'flarum/common/Model';\n\n/**\n * Special model used only client-side to hold a free text search value in the search field\n */\nexport default class Text extends Model {\n    text = Model.attribute('text');\n}\n","import CheckableButton from './CheckableButton';\nimport SearchField from './SearchField';\nimport SmallUserCard from './SmallUserCard';\nimport UserDirectoryList from './UserDirectoryList';\nimport UserDirectoryListItem from './UserDirectoryListItem';\nimport UserDirectoryPage from './UserDirectoryPage';\n\nexport const components = {\n    CheckableButton,\n    SearchField,\n    SmallUserCard,\n    UserDirectoryList,\n    UserDirectoryListItem,\n    UserDirectoryPage,\n};\n","import AbstractType from './AbstractType';\nimport GroupFilter from './GroupFilter';\nimport TextFilter from './TextFilter';\n\nexport const searchTypes = {\n    AbstractType,\n    GroupFilter,\n    TextFilter,\n};\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UsersSearchSource from 'flarum/common/components/UsersSearchSource';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport IndexPage from 'flarum/common/components/IndexPage';\nimport UserDirectoryPage from './components/UserDirectoryPage';\nimport UserDirectoryList from './components/UserDirectoryList';\nimport UserDirectoryListItem from './components/UserDirectoryListItem';\nimport UserDirectoryState from './states/UserDirectoryState';\nimport SortMap from '../common/utils/SortMap';\nimport CheckableButton from './components/CheckableButton';\nimport Text from './models/Text';\n\n// Allow other extensions to extend the page\nexport { UserDirectoryPage, UserDirectoryList, UserDirectoryListItem, UserDirectoryState, SortMap, CheckableButton };\n\napp.initializers.add('fof-user-directory', (app) => {\n    app.routes.fof_user_directory = {\n        path: '/users',\n        component: UserDirectoryPage,\n    };\n\n    app.store.models['fof-user-directory-text'] = Text;\n\n    extend(UsersSearchSource.prototype, 'view', function (view, query) {\n        if (!view || app.forum.attribute('userDirectoryDisableGlobalSearchSource')) {\n            return;\n        }\n\n        query = query.toLowerCase();\n\n        view.splice(\n            1,\n            0,\n            m(\n                'li',\n                LinkButton.component(\n                    {\n                        href: app.route('fof_user_directory', { q: query }),\n                        icon: 'fas fa-search',\n                    },\n                    app.translator.trans('fof-user-directory.forum.search.users_heading', { query })\n                )\n            )\n        );\n    });\n\n    extend(IndexPage.prototype, 'navItems', (items) => {\n        if (app.forum.attribute('canSeeUserDirectoryLink')) {\n            items.add(\n                'fof-user-directory',\n                LinkButton.component(\n                    {\n                        href: app.route('fof_user_directory'),\n                        icon: 'far fa-address-book',\n                    },\n                    app.translator.trans('fof-user-directory.forum.page.nav')\n                ),\n                85\n            );\n        }\n    });\n});\n\nexport * from './components';\nexport * from './searchTypes';\n"],"sourceRoot":""}
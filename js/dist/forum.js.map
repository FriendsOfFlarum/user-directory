{"version":3,"sources":["webpack://@fof/user-directory/webpack/bootstrap","webpack://@fof/user-directory/external \"flarum.core.compat['forum/app']\"","webpack://@fof/user-directory/./src/common/utils/SortMap.js","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/Component']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/user-directory/external \"flarum.core.compat['forum/components/UserCard']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@fof/user-directory/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/extend']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/Model']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/UsersSearchSource']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/IndexPage']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Page']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Select']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/SelectDropdown']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Placeholder']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/utils/humanTime']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/utils/withAttr']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/utils/KeyboardNavigatable']\"","webpack://@fof/user-directory/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/models/Group']\"","webpack://@fof/user-directory/external \"flarum.core.compat['common/components/Separator']\"","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/user-directory/./src/forum/components/SmallUserCard.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryListItem.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryList.js","webpack://@fof/user-directory/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/user-directory/./src/forum/states/UserDirectoryState.js","webpack://@fof/user-directory/./src/forum/components/CheckableButton.js","webpack://@fof/user-directory/./src/forum/searchTypes/AbstractType.js","webpack://@fof/user-directory/./src/forum/searchTypes/TextFilter.js","webpack://@fof/user-directory/./src/forum/searchTypes/GroupFilter.js","webpack://@fof/user-directory/./src/forum/components/SearchField.js","webpack://@fof/user-directory/./src/forum/components/UserDirectoryPage.js","webpack://@fof/user-directory/./src/forum/models/Text.ts","webpack://@fof/user-directory/./src/forum/components/index.js","webpack://@fof/user-directory/./src/forum/searchTypes/index.js","webpack://@fof/user-directory/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","SortMap","sortMap","username_az","username_za","newest","oldest","most_discussions","least_discussions","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","SmallUserCard","infoItems","items","ItemList","user","this","attrs","add","app","translator","trans","ago","humanTime","joinTime","UserCard","UserDirectoryListItem","view","vnode","useSmallCards","attributes","className","controlsButtonClassName","component","Component","UserDirectoryList","loading","state","params","getParams","forum","attribute","isLoading","LoadingIndicator","moreResults","Button","onclick","loadMore","empty","text","Placeholder","isSearchResults","users","map","id","data-id","_extends","assign","target","arguments","length","source","apply","UserDirectoryState","window","qBuilder","requestParams","include","filter","sortKey","sort","q","default","clear","redraw","refreshParams","newParams","hasUsers","keys","some","values","join","trim","refresh","loadResults","then","results","parseResults","offset","preloadedUsers","preloadedApiDocument","Promise","resolve","page","store","find","push","payload","links","next","CheckableButton","getButtonContent","children","prev","checked","icon","AbstractType","suggestions","resourceType","search","query","renderKind","resource","renderLabel","applyFilter","initializeFromParams","TextFilter","createRecord","split","word","indexOf","GroupFilter","toLowerCase","all","forEach","group","Group","GUEST_ID","nameSingular","namePlural","color","style","backgroundColor","qWithSpacesAround","groups","SearchField","oninit","searchIndex","navigator","KeyboardNavigatable","when","event","onUp","onDown","allSuggestions","onSelect","selectResult","applyFiltering","onRemove","appliedFilters","pop","availableFilters","filterTypes","toArray","focused","route","param","resources","recipient","index","splice","title","searchResultKind","recipientLabel","placeholder","oninput","withAttr","performNewSearch","onkeydown","navigate","onfocus","onblur","result","type","filterForResource","f","data","clearSuggestions","concat","console","warn","set","UserDirectoryPage","bodyClass","idSegments","Array","from","matchAll","match","enabledGroupFilters","enabledSpecialGroupFilters","history","IndexPage","hero","listItems","sidebarItems","viewItems","actionItems","replace","SelectDropdown","buttonClassName","navItems","stickyParams","LinkButton","href","sortOptions","Select","options","onchange","changeParams","Dropdown","caretIcon","label","groupItems","includes","e","initializers","has","Separator","session","moreQ","Page","Text","Model","components","searchTypes","routes","fof_user_directory","path","models","extend","UsersSearchSource"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = flarum.core.compat['forum/app'];","/**\n * The sort options.\n * We use a class and not just a POJO/function because we want extensions to be able to extend it\n */\nexport default class SortMap {\n    sortMap() {\n        return {\n            username_az: 'username',\n            username_za: '-username',\n            newest: '-joinedAt',\n            oldest: 'joinedAt',\n            most_discussions: '-discussionCount',\n            least_discussions: 'discussionCount',\n        };\n    }\n}\n","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['forum/components/UserCard'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/components/UsersSearchSource'];","module.exports = flarum.core.compat['common/components/IndexPage'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['common/components/SelectDropdown'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/components/Placeholder'];","module.exports = flarum.core.compat['common/utils/humanTime'];","module.exports = flarum.core.compat['common/utils/withAttr'];","module.exports = flarum.core.compat['common/utils/KeyboardNavigatable'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['common/models/Group'];","module.exports = flarum.core.compat['common/components/Separator'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import UserCard from 'flarum/forum/components/UserCard';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport humanTime from 'flarum/common/utils/humanTime';\n\nexport default class SmallUserCard extends UserCard {\n    //Overriding infoItems so that other extensions can separately add items to small cards\n    infoItems() {\n        const items = new ItemList();\n        const user = this.attrs.user;\n\n        items.add('joined', app.translator.trans('core.forum.user.joined_date_text', { ago: humanTime(user.joinTime()) }));\n\n        return items;\n    }\n}\n","import Component from 'flarum/common/Component';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport SmallUserCard from './SmallUserCard';\n\nexport default class UserDirectoryListItem extends Component {\n    view(vnode) {\n        const { user, useSmallCards } = this.attrs;\n\n        const attributes = {\n            user,\n            className: `UserCard--directory${useSmallCards ? ' UserCard--small' : ''}`,\n            controlsButtonClassName: 'Button Button--icon Button--flat',\n        };\n\n        return <div className=\"User\">{useSmallCards ? SmallUserCard.component(attributes) : UserCard.component(attributes)}</div>;\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport UserDirectoryListItem from './UserDirectoryListItem';\n\n/**\n * Based on Flarum's DiscussionList\n */\nexport default class UserDirectoryList extends Component {\n    view() {\n        const { state } = this.attrs;\n\n        const params = state.getParams();\n        const useSmallCards = app.forum.attribute('userDirectorySmallCards');\n        let loading;\n\n        if (state.isLoading()) {\n            loading = LoadingIndicator.component();\n        } else if (state.moreResults) {\n            loading = Button.component(\n                {\n                    className: 'Button',\n                    onclick: state.loadMore.bind(state),\n                },\n                app.translator.trans('fof-user-directory.forum.page.load_more_button')\n            );\n        }\n\n        if (state.empty()) {\n            const text = app.translator.trans('fof-user-directory.forum.page.empty_text');\n            return <div className=\"DiscussionList\">{Placeholder.component({ text })}</div>;\n        }\n\n        return (\n            <div\n                className={\n                    'UserDirectoryList' +\n                    (state.isSearchResults() ? ' UserDirectoryList--searchResults' : '') +\n                    (useSmallCards ? ' UserDirectoryList--small-cards' : '')\n                }\n            >\n                <ul className=\"UserDirectoryList-users\">\n                    {state.users.map((user) => {\n                        return (\n                            <li key={user.id()} data-id={user.id()}>\n                                {UserDirectoryListItem.component({ user, params, useSmallCards })}\n                            </li>\n                        );\n                    })}\n                </ul>\n                <div className=\"UserDirectoryList-loadMore\">{loading}</div>\n            </div>\n        );\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/**\n * Based on Flarum's DiscussionListState\n */\nimport SortMap from '../../common/utils/SortMap';\n\nexport default class UserDirectoryState {\n    constructor(params = {}, app = window.app) {\n        this.params = params;\n\n        this.app = app;\n\n        this.users = [];\n\n        this.moreResults = false;\n\n        this.loading = false;\n\n        this.qBuilder = {};\n    }\n\n    requestParams() {\n        const params = { include: [], filter: {} };\n\n        const sortKey = this.params.sort || app.forum.attribute('userDirectoryDefaultSort');\n\n        // sort might be set to null if no sort params has been passed\n        params.sort = this.sortMap()[sortKey];\n\n        if (this.params.q) {\n            params.filter.q = this.params.q;\n        }\n\n        return params;\n    }\n\n    sortMap() {\n        return {\n            default: '',\n            ...new SortMap().sortMap(),\n        };\n    }\n\n    getParams() {\n        return this.params;\n    }\n\n    clear() {\n        this.users = [];\n        m.redraw();\n    }\n\n    refreshParams(newParams) {\n        if (!this.hasUsers() || Object.keys(newParams).some((key) => this.getParams()[key] !== newParams[key])) {\n            const q = newParams.q;\n            this.params = newParams;\n            Object.assign(this.qBuilder, newParams.qBuilder || {});\n            this.params.q = Object.values(this.qBuilder).join(' ').trim();\n\n            if (!this.params.q && q) {\n                this.params.q = q;\n            }\n\n            this.refresh();\n        }\n    }\n\n    refresh() {\n        this.loading = true;\n\n        this.clear();\n\n        return this.loadResults().then(\n            (results) => {\n                this.users = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n            }\n        );\n    }\n\n    loadResults(offset) {\n        const preloadedUsers = this.app.preloadedApiDocument();\n\n        if (preloadedUsers) {\n            return Promise.resolve(preloadedUsers);\n        }\n\n        const params = this.requestParams();\n        params.page = { offset };\n        params.include = params.include.join(',');\n\n        return this.app.store.find('users', params);\n    }\n\n    loadMore() {\n        this.loading = true;\n\n        this.loadResults(this.users.length).then(this.parseResults.bind(this));\n    }\n\n    parseResults(results) {\n        this.users.push(...results);\n\n        this.loading = false;\n        this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n        m.redraw();\n\n        return results;\n    }\n\n    hasUsers() {\n        return this.users.length > 0;\n    }\n\n    isLoading() {\n        return this.loading;\n    }\n\n    isSearchResults() {\n        return !!this.params.q;\n    }\n\n    empty() {\n        return !this.hasUsers() && !this.isLoading();\n    }\n}\n","import Button from 'flarum/common/components/Button';\nimport icon from 'flarum/common/helpers/icon';\n\nexport default class CheckableButton extends Button {\n    /**\n     * Get the template for the button's content.\n     *\n     * @return {*}\n     * @protected\n     */\n    getButtonContent(children) {\n        const prev = super.getButtonContent(children);\n\n        if (this.attrs.checked) prev.push(icon('fas fa-check', { className: 'Button-icon ButtonCheck' }));\n\n        return prev;\n    }\n}\n","/**\n * @abstract\n */\nexport default class AbstractType {\n    constructor() {\n        this.suggestions = [];\n        this.loading = false;\n    }\n\n    /**\n     * The `type` property of the Models used in suggestions and applied filters for this type\n     * @return {String}\n     */\n    resourceType() {\n        //\n    }\n\n    /**\n     * Executed when the search query changes\n     * The method should update this.suggestions with the new results\n     * If asynchronous loading is used, this.loading should be set to true during the process\n     * @param {String} query\n     */\n    search(query) {\n        //\n    }\n\n    /**\n     * Renders the \"kind\" label next to the value indicating what kind of information that result is\n     * Should probably just be a translated text\n     * @param {Model} resource\n     * @return {vnode}\n     */\n    renderKind(resource) {\n        //\n    }\n\n    /**\n     * Renders the Label containing the suggestion's value\n     * Should be a vdom template using the .UserDirectorySearchLabel class or similar\n     * @param {Model} resource\n     * @return {vnode}\n     */\n    renderLabel(resource) {\n        //\n    }\n\n    /**\n     * Applies a filter on a params object to use in the page request\n     * @param {Object} params Object. Might or might not contain a `q` property or `sort` property. In the future, `filters` object might be supported\n     * @param {Model} resource\n     */\n    applyFilter(params, resource) {\n        //\n    }\n\n    /**\n     * Used to populate the search field on page load with values from the querystring\n     * A promise must be returned, and the UI will auto-update once the promise returns\n     * @param {Object} params Object with a `q` and `sort` property. `filters` might be supported in the future\n     * @return {Promise<Model[]>}\n     */\n    initializeFromParams(params) {\n        //\n    }\n}\n","import app from 'flarum/forum/app';\nimport AbstractType from './AbstractType';\n\n/* global m */\n\nexport default class TextFilter extends AbstractType {\n    resourceType() {\n        return 'fof-user-directory-text';\n    }\n\n    search(query) {\n        if (!query) {\n            this.suggestions = [];\n            return;\n        }\n\n        this.suggestions = [\n            app.store.createRecord('fof-user-directory-text', {\n                attributes: {\n                    text: query,\n                },\n            }),\n        ];\n    }\n\n    renderKind() {\n        return app.translator.trans('fof-user-directory.forum.search.kinds.text');\n    }\n\n    renderLabel(resource) {\n        return m('.UserDirectorySearchLabel', resource.text());\n    }\n\n    applyFilter(params, resource) {\n        params.q = params.q ? params.q + ' ' : '';\n        params.q += resource.text();\n    }\n\n    initializeFromParams(params) {\n        if (!params.q) {\n            return Promise.resolve([]);\n        }\n\n        return Promise.resolve(\n            params.q\n                .split(' ')\n                // Words with : are gambits and we will ignore them\n                .filter((word) => word.indexOf(':') === -1)\n                .map((word) =>\n                    app.store.createRecord('fof-user-directory-text', {\n                        attributes: {\n                            text: word,\n                        },\n                    })\n                )\n        );\n    }\n}\n","import app from 'flarum/forum/app';\nimport Group from 'flarum/common/models/Group';\nimport icon from 'flarum/common/helpers/icon';\nimport AbstractType from './AbstractType';\n\n/* global m */\n\nexport default class GroupFilter extends AbstractType {\n    resourceType() {\n        return 'groups';\n    }\n\n    search(query) {\n        this.suggestions = [];\n\n        if (!query) {\n            return;\n        }\n\n        query = query.toLowerCase();\n\n        app.store.all('groups').forEach((group) => {\n            // Do not allow Guest group as it wouldn't do anything\n            if (group.id() === Group.GUEST_ID) {\n                return;\n            }\n\n            if (group.nameSingular().toLowerCase().indexOf(query) !== -1 || group.namePlural().toLowerCase().indexOf(query) !== -1) {\n                this.suggestions.push(group);\n            }\n        });\n    }\n\n    renderKind() {\n        return app.translator.trans('fof-user-directory.forum.search.kinds.group');\n    }\n\n    renderLabel(group) {\n        return m(\n            '.UserDirectorySearchLabel',\n            group.color()\n                ? {\n                      className: 'colored',\n                      style: {\n                          backgroundColor: group.color(),\n                      },\n                  }\n                : {},\n            [group.icon() ? [icon(group.icon()), ' '] : null, group.namePlural()]\n        );\n    }\n\n    applyFilter(params, group) {\n        params.q = params.q ? params.q + ' ' : '';\n        params.q += 'group:' + group.namePlural();\n    }\n\n    initializeFromParams(params) {\n        if (!params.q) {\n            return Promise.resolve([]);\n        }\n\n        const qWithSpacesAround = ' ' + params.q + ' ';\n\n        const groups = [];\n\n        app.store.all('groups').forEach((group) => {\n            if (qWithSpacesAround.indexOf('group:' + group.namePlural()) !== -1) {\n                groups.push(group);\n            }\n        });\n\n        return Promise.resolve(groups);\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport KeyboardNavigatable from 'flarum/common/utils/KeyboardNavigatable';\nimport ItemList from 'flarum/utils/ItemList';\nimport TextFilter from '../searchTypes/TextFilter';\nimport GroupFilter from '../searchTypes/GroupFilter';\n\nexport default class SearchField extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.searchIndex = 0;\n        this.navigator = new KeyboardNavigatable();\n        this.navigator\n            .when((event) => {\n                // Do not handle keyboard when TAB is pressed and there's nothing in field\n                // Without this it's impossible to TAB out of the field\n                return event.key !== 'Tab' || !!this.filter;\n            })\n            .onUp(() => {\n                if (this.searchIndex > 0) {\n                    this.searchIndex--;\n                    m.redraw();\n                }\n            })\n            .onDown(() => {\n                if (this.searchIndex < this.allSuggestions().length - 1) {\n                    this.searchIndex++;\n                    m.redraw();\n                }\n            })\n            .onSelect(() => {\n                if (this.filter) {\n                    this.selectResult(this.allSuggestions()[this.searchIndex]);\n                    m.redraw();\n                } else {\n                    this.applyFiltering();\n                }\n            })\n            .onRemove(() => {\n                this.appliedFilters.pop();\n            });\n\n        this.availableFilters = this.filterTypes().toArray();\n        this.appliedFilters = [];\n\n        this.filter = '';\n        this.focused = false;\n\n        // When the page loads, initialize UI with filters from the parameters\n        this.availableFilters.forEach((filter) => {\n            filter\n                .initializeFromParams({\n                    sort: m.route.param('sort'),\n                    q: m.route.param('q'),\n                })\n                .then((resources) => {\n                    this.appliedFilters.push(...resources);\n                    m.redraw();\n                });\n        });\n    }\n\n    view() {\n        const suggestions = this.allSuggestions();\n\n        const loading = this.availableFilters.some((filter) => filter.loading);\n\n        return (\n            <div className=\"Form-group Usersearchbox\">\n                <div className={`UserDirectorySearchInput FormControl ${this.focused ? 'focus' : ''}`}>\n                    <span className=\"UserDirectorySearchInput-selected\">\n                        {this.appliedFilters.map((recipient, index) => (\n                            <span\n                                className=\"UserDirectorySearchInput-filter\"\n                                onclick={() => {\n                                    this.appliedFilters.splice(index, 1);\n                                    this.applyFiltering();\n                                }}\n                                title={this.searchResultKind(recipient)}\n                            >\n                                {this.recipientLabel(recipient)}\n                            </span>\n                        ))}\n                    </span>\n                    <input\n                        className=\"FormControl\"\n                        placeholder={app.translator.trans('fof-user-directory.forum.search.field.placeholder')}\n                        value={this.filter}\n                        oninput={withAttr('value', (value) => {\n                            this.filter = value;\n                            this.performNewSearch();\n                        })}\n                        onkeydown={this.navigator.navigate.bind(this.navigator)}\n                        onfocus={() => {\n                            this.focused = true;\n                        }}\n                        onblur={() => {\n                            this.focused = false;\n                        }}\n                    />\n                    {loading && <LoadingIndicator />}\n                    {!!suggestions.length && (\n                        <ul className=\"Dropdown-menu\">\n                            {suggestions.map((result, index) => (\n                                <li\n                                    className={this.searchIndex === index ? 'active' : ''}\n                                    onclick={() => {\n                                        this.selectResult(result);\n                                        this.applyFiltering();\n                                    }}\n                                >\n                                    <button type=\"button\">\n                                        <span className=\"UserDirectorySearchKind\">{this.searchResultKind(result)}</span>\n                                        {this.recipientLabel(result)}\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    filterTypes() {\n        const items = new ItemList();\n\n        items.add('text', new TextFilter(), 10);\n        items.add('group', new GroupFilter(), 20);\n\n        return items;\n    }\n\n    filterForResource(resource) {\n        return this.availableFilters.find((f) => f.resourceType() === resource.data.type);\n    }\n\n    recipientLabel(resource) {\n        const filter = this.filterForResource(resource);\n\n        if (filter) {\n            return filter.renderLabel(resource);\n        }\n\n        return '[unknown]';\n    }\n\n    searchResultKind(resource) {\n        const filter = this.filterForResource(resource);\n\n        if (filter) {\n            return filter.renderKind(resource);\n        }\n\n        return '[unknown]';\n    }\n\n    selectResult(result) {\n        if (!result) {\n            return;\n        }\n\n        this.appliedFilters.push(result);\n        this.clearSuggestions();\n    }\n\n    clearSuggestions() {\n        this.filter = '';\n        this.availableFilters.forEach((filter) => {\n            filter.search('');\n        });\n    }\n\n    allSuggestions() {\n        return [].concat(...this.availableFilters.map((filter) => filter.suggestions));\n    }\n\n    performNewSearch() {\n        this.searchIndex = 0;\n\n        this.availableFilters.forEach((filter) => {\n            filter.search(this.filter);\n        });\n\n        this.attrs.state.refreshParams({ ...this.attrs.state.getParams(), qBuilder: this.qBuilder() });\n    }\n\n    qBuilder(params = {}) {\n        this.appliedFilters.forEach((resource) => {\n            const filter = this.filterForResource(resource);\n\n            if (filter) {\n                filter.applyFilter(params, resource);\n            } else {\n                console.warn('Cannot find filter class for resource', resource);\n            }\n        });\n        return { filter: `${this.filter} ${params.q || ''}` };\n    }\n\n    applyFiltering() {\n        const params = {\n            sort: m.route.param('sort'),\n        };\n\n        this.qBuilder(params);\n\n        m.route.set(app.route('fof_user_directory', params));\n    }\n}\n","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Select from 'flarum/common/components/Select';\nimport Button from 'flarum/common/components/Button';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport SelectDropdown from 'flarum/common/components/SelectDropdown';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport UserDirectoryList from './UserDirectoryList';\nimport UserDirectoryState from '../states/UserDirectoryState';\nimport CheckableButton from './CheckableButton';\nimport SearchField from './SearchField';\nimport Separator from 'flarum/common/components/Separator';\n\n/**\n * This page re-uses Flarum's IndexPage CSS classes\n */\nexport default class UserDirectoryPage extends Page {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.state = new UserDirectoryState({});\n        this.state.refreshParams(app.search.params());\n\n        this.bodyClass = 'User--directory';\n\n        let idSegments = [];\n        if (this.params().q) {\n            Array.from(this.params().q.matchAll(/group:([\\d,]+)/g)).forEach((match) => {\n                idSegments.push(match[1]);\n            });\n        }\n        this.enabledGroupFilters = idSegments\n            .join(',')\n            .split(',')\n            .filter((id) => id);\n\n        this.enabledSpecialGroupFilters = [];\n\n        app.history.push('users', app.translator.trans('fof-user-directory.forum.header.back_to_user_directory_tooltip'));\n    }\n\n    view() {\n        return (\n            <div className=\"IndexPage\">\n                {IndexPage.prototype.hero()}\n                <div className=\"container\">\n                    <div className=\"sideNavContainer\">\n                        <nav className=\"IndexPage-nav sideNav\">\n                            <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                        </nav>\n                        <div className=\"IndexPage-results sideNavOffset\">\n                            <div className=\"IndexPage-toolbar\">\n                                <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\n                                <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\n                            </div>\n                            <UserDirectoryList state={this.state} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Our own sidebar. Re-uses Index.sidebarItems as the base\n     * Elements added here will only show up on the user directory page\n     *\n     * @return {ItemList}\n     */\n    sidebarItems() {\n        const items = IndexPage.prototype.sidebarItems();\n\n        items.replace(\n            'nav',\n            SelectDropdown.component(\n                {\n                    buttonClassName: 'Button',\n                    className: 'App-titleControl',\n                },\n                this.navItems().toArray()\n            )\n        );\n\n        return items;\n    }\n\n    /**\n     * Our own sidebar navigation. Re-uses Index.navItems as the base\n     * Elements added here will only show up on the user directory page\n     *\n     * @return {ItemList}\n     */\n    navItems() {\n        const items = IndexPage.prototype.navItems();\n        const params = this.stickyParams();\n\n        items.add(\n            'fof-user-directory',\n            LinkButton.component(\n                {\n                    href: app.route('fof_user_directory', params),\n                    icon: 'far fa-address-book',\n                },\n                app.translator.trans('fof-user-directory.forum.page.nav')\n            ),\n            85\n        );\n\n        return items;\n    }\n\n    viewItems() {\n        const items = new ItemList();\n        const sortMap = this.state.sortMap();\n\n        const sortOptions = {};\n        for (const i in sortMap) {\n            sortOptions[i] = app.translator.trans('fof-user-directory.lib.sort.' + i);\n        }\n\n        items.add(\n            'sort',\n            Select.component({\n                options: sortOptions,\n                value: this.state.getParams().sort || app.forum.attribute('userDirectoryDefaultSort'),\n                onchange: this.changeParams.bind(this),\n            })\n        );\n\n        items.add(\n            'filterGroups',\n            Dropdown.component(\n                {\n                    caretIcon: 'fas fa-filter',\n                    label: app.translator.trans('fof-user-directory.forum.page.filter_button'),\n                    buttonClassName: 'FormControl',\n                    className: 'GroupFilterDropdown',\n                },\n                this.groupItems().toArray()\n            )\n        );\n\n        items.add(\n            'search',\n            SearchField.component({\n                state: this.state,\n            })\n        );\n\n        return items;\n    }\n\n    groupItems() {\n        const items = new ItemList();\n\n        app.store\n            .all('groups')\n            .filter((group) => group.id() !== '2' && group.id() !== '3')\n            .forEach((group) => {\n                items.add(\n                    group.namePlural(),\n                    CheckableButton.component(\n                        {\n                            className: 'GroupFilterButton',\n                            icon: group.icon(),\n                            checked: this.enabledGroupFilters.includes(group.id()),\n                            onclick: () => {\n                                const id = group.id();\n                                if (this.enabledGroupFilters.includes(id)) {\n                                    this.enabledGroupFilters = this.enabledGroupFilters.filter((e) => e != id);\n                                } else {\n                                    this.enabledGroupFilters.push(id);\n                                }\n\n                                this.changeParams(this.params().sort);\n                            },\n                        },\n                        group.namePlural()\n                    )\n                );\n            });\n\n        if (app.initializers.has('flarum-suspend') && app.forum.attribute('hasSuspendPermission')) {\n            items.add(\n                'suspend',\n                CheckableButton.component(\n                    {\n                        className: 'GroupFilterButton',\n                        icon: 'fas fa-ban',\n                        checked: this.enabledSpecialGroupFilters['flarum-suspend'] === 'is:suspended',\n                        onclick: () => {\n                            const id = 'flarum-suspend';\n                            if (this.enabledSpecialGroupFilters[id] === 'is:suspended') {\n                                this.enabledSpecialGroupFilters[id] = '';\n                            } else {\n                                this.enabledSpecialGroupFilters[id] = 'is:suspended';\n                            }\n\n                            this.changeParams(this.params().sort);\n                        },\n                    },\n                    app.translator.trans('flarum-suspend.forum.user_badge.suspended_tooltip')\n                ),\n                90\n            );\n\n            items.add('seperator', Separator.component(), 50);\n        }\n\n        return items;\n    }\n\n    actionItems() {\n        const items = new ItemList();\n\n        items.add(\n            'refresh',\n            Button.component({\n                title: app.translator.trans('fof-user-directory.forum.page.refresh_tooltip'),\n                icon: 'fas fa-sync',\n                className: 'Button Button--icon',\n                onclick: () => {\n                    this.state.refresh();\n                    if (app.session.user) {\n                        app.store.find('users', app.session.user.id());\n                        m.redraw();\n                    }\n                },\n            })\n        );\n\n        return items;\n    }\n\n    /**\n     * Redirect to the index page using the given sort parameter.\n     *\n     * @param {String} sort\n     */\n    changeParams(sort) {\n        const params = this.params();\n\n        if (sort === app.forum.attribute('userDirectoryDefaultSort')) {\n            delete params.sort;\n        } else {\n            params.sort = sort;\n        }\n\n        let moreQ = '';\n        for (const filter in this.enabledSpecialGroupFilters) {\n            moreQ += this.enabledSpecialGroupFilters[filter] + ' ';\n        }\n\n        if (this.enabledGroupFilters.length > 0) {\n            params.qBuilder = { groups: 'group:' + this.enabledGroupFilters.join(',') };\n        } else {\n            params.qBuilder = { groups: '', q: moreQ.trim() };\n        }\n\n        this.state.refreshParams(params);\n    }\n\n    stickyParams() {\n        return {\n            sort: m.route.param('sort'),\n            q: m.route.param('q'),\n        };\n    }\n\n    params() {\n        return this.stickyParams();\n    }\n}\n","import Model from 'flarum/common/Model';\n\n/**\n * Special model used only client-side to hold a free text search value in the search field\n */\nexport default class Text extends Model {\n    text = Model.attribute('text');\n}\n","import CheckableButton from './CheckableButton';\nimport SearchField from './SearchField';\nimport SmallUserCard from './SmallUserCard';\nimport UserDirectoryList from './UserDirectoryList';\nimport UserDirectoryListItem from './UserDirectoryListItem';\nimport UserDirectoryPage from './UserDirectoryPage';\n\nexport const components = {\n    CheckableButton,\n    SearchField,\n    SmallUserCard,\n    UserDirectoryList,\n    UserDirectoryListItem,\n    UserDirectoryPage,\n};\n","import AbstractType from './AbstractType';\nimport GroupFilter from './GroupFilter';\nimport TextFilter from './TextFilter';\n\nexport const searchTypes = {\n    AbstractType,\n    GroupFilter,\n    TextFilter,\n};\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UsersSearchSource from 'flarum/common/components/UsersSearchSource';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport IndexPage from 'flarum/common/components/IndexPage';\nimport UserDirectoryPage from './components/UserDirectoryPage';\nimport UserDirectoryList from './components/UserDirectoryList';\nimport UserDirectoryListItem from './components/UserDirectoryListItem';\nimport UserDirectoryState from './states/UserDirectoryState';\nimport SortMap from '../common/utils/SortMap';\nimport CheckableButton from './components/CheckableButton';\nimport Text from './models/Text';\n\n// Allow other extensions to extend the page\nexport { UserDirectoryPage, UserDirectoryList, UserDirectoryListItem, UserDirectoryState, SortMap, CheckableButton };\n\napp.initializers.add('fof-user-directory', (app) => {\n    app.routes.fof_user_directory = {\n        path: '/users',\n        component: UserDirectoryPage,\n    };\n\n    app.store.models['fof-user-directory-text'] = Text;\n\n    extend(UsersSearchSource.prototype, 'view', function (view, query) {\n        if (!view || app.forum.attribute('userDirectoryDisableGlobalSearchSource')) {\n            return;\n        }\n\n        query = query.toLowerCase();\n\n        view.splice(\n            1,\n            0,\n            m(\n                'li',\n                LinkButton.component(\n                    {\n                        href: app.route('fof_user_directory', { q: query }),\n                        icon: 'fas fa-search',\n                    },\n                    app.translator.trans('fof-user-directory.forum.search.users_heading', { query })\n                )\n            )\n        );\n    });\n\n    extend(IndexPage.prototype, 'navItems', (items) => {\n        if (app.forum.attribute('canSeeUserDirectoryLink')) {\n            items.add(\n                'fof-user-directory',\n                LinkButton.component(\n                    {\n                        href: app.route('fof_user_directory'),\n                        icon: 'far fa-address-book',\n                    },\n                    app.translator.trans('fof-user-directory.forum.page.nav')\n                ),\n                85\n            );\n        }\n    });\n});\n\nexport * from './components';\nexport * from './searchTypes';\n"],"sourceRoot":""}
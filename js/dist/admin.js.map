{"version":3,"file":"admin.js","mappings":";;;;;;;;;;;;;;;;;;;;AAA6C;AACV;AACW;AAC9C,iEAAe,KAAK,sEAAY;AAChC;AACA,SAAS,kEAAc;AACvB;AACA,CAAC;AACD;AACA,SAAS,kEAAc;AACvB;AACA,CAAC;AACD;AACA,SAAS,kEAAc;AACvB;AACA,CAAC;AACD;AACA,SAAS,kEAAc;AACvB;AACA,CAAC;AACD;AACA,QAAQ,kEAAc;AACtB;AACA,kBAAkB,6DAAO;AACzB,wBAAwB,kEAAc;AACtC,GAAG;AACH;AACA;AACA,WAAW,kEAAc;AACzB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,SAAS,kEAAc;AACvB;AACA;AACA,CAAC,WAAW;;;;;;;;;;;;;;;;;;;;ACtCuB;AACW;AAC3B;AAC0B;AAC7C,oEAAgB;AAChB;AACA,CAAC;;;;;;;;;;;;;;;ACND;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA,4EAA4E;UAC5E;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@fof/user-directory/./src/admin/extend.ts","webpack://@fof/user-directory/./src/admin/index.ts","webpack://@fof/user-directory/./src/common/utils/SortMap.js","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'admin/app')\"","webpack://@fof/user-directory/external root \"flarum.reg.get('core', 'common/extenders')\"","webpack://@fof/user-directory/webpack/bootstrap","webpack://@fof/user-directory/webpack/runtime/compat get default export","webpack://@fof/user-directory/webpack/runtime/define property getters","webpack://@fof/user-directory/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/user-directory/webpack/runtime/make namespace object","webpack://@fof/user-directory/./admin.ts"],"sourcesContent":["import Extend from 'flarum/common/extenders';\nimport app from 'flarum/admin/app';\nimport SortMap from '../common/utils/SortMap';\nexport default [new Extend.Admin().setting(() => ({\n  setting: 'fof-user-directory-link',\n  label: app.translator.trans('fof-user-directory.admin.settings.link'),\n  type: 'boolean'\n})).setting(() => ({\n  setting: 'fof-user-directory.use-small-cards',\n  label: app.translator.trans('fof-user-directory.admin.settings.use-small-cards'),\n  type: 'boolean'\n})).setting(() => ({\n  setting: 'fof-user-directory.disable-global-search-source',\n  label: app.translator.trans('fof-user-directory.admin.settings.disable-global-search-source'),\n  type: 'boolean'\n})).setting(() => ({\n  setting: 'fof-user-directory.link-group-mentions',\n  label: app.translator.trans('fof-user-directory.admin.settings.link-group-mentions'),\n  type: 'boolean'\n})).setting(() => {\n  const sortOptions = {\n    '': app.translator.trans('fof-user-directory.lib.sort.not_specified')\n  };\n  Object.keys(new SortMap().sortMap()).forEach(sort => {\n    sortOptions[sort] = app.translator.trans('fof-user-directory.lib.sort.' + sort);\n  });\n  return {\n    setting: 'fof-user-directory.default-sort',\n    label: app.translator.trans('fof-user-directory.admin.settings.default-sort'),\n    options: sortOptions,\n    type: 'select',\n    default: ''\n  };\n}).permission(() => ({\n  icon: 'far fa-address-book',\n  label: app.translator.trans('fof-user-directory.admin.permissions.view_user_directory'),\n  permission: 'fof.user-directory.view',\n  allowGuest: true\n}), 'view')];","import app from 'flarum/admin/app';\nimport SortMap from '../common/utils/SortMap';\nexport { SortMap };\nexport { default as extend } from './extend';\napp.initializers.add('fof-user-directory', () => {\n  //\n});","/**\n * The sort options.\n * We use a class and not just a POJO/function because we want extensions to be able to extend it\n */\nexport default class SortMap {\n  sortMap() {\n    return {\n      username_az: 'username',\n      username_za: '-username',\n      newest: '-joinedAt',\n      oldest: 'joinedAt',\n      most_discussions: '-discussionCount',\n      least_discussions: 'discussionCount'\n    };\n  }\n}\nflarum.reg.add('fof-user-directory', 'common/utils/SortMap', SortMap);","module.exports = flarum.reg.get('core', 'admin/app');","module.exports = flarum.reg.get('core', 'common/extenders');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\tflarum.reg._webpack_runtimes[\"fof-user-directory\"] ||= __webpack_require__;// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/admin';\n"],"names":[],"sourceRoot":""}